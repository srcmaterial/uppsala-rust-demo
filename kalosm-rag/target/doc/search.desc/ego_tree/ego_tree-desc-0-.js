searchState.loadedDescShard("ego_tree", 0, "Vec-backed ID-tree.\nNode ID.\nNode mutator.\nNode reference.\nVec-backed ID-tree.\nReturns an iterator over ancestors.\nAppends a new child to this node.\nAppends a child to this node.\nReturns an iterator over children.\nReturns an iterator over this node and its descendants.\nDetaches this node from its parent.\nReturns the first child of this node.\nReturns the first child of this node.\nReturns an iterator over first children.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a reference to the specified node.\nReturns a mutator of the specified node.\nReturns a reference to the specified node.\nReturns a mutator of the specified node.\nReturns true if this node has children.\nReturns true if this node has children.\nReturns true if this node has siblings.\nReturns true if this node has siblings.\nReturns the ID of this node.\nReturns the ID of this node.\nInserts a new sibling after this node.\nInserts a new sibling before this node.\nInserts a sibling after this node.\nInserts a sibling before this node.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIterators.\nReturns the last child of this node.\nReturns the last child of this node.\nReturns an iterator over last children.\nCreates a tree with a root node.\nReturns the next sibling of this node.\nReturns the next sibling of this node.\nReturns an iterator over next siblings.\nReturns an iterator over nodes in insert order.\nCreates an orphan node.\nReturns the parent of this node.\nReturns the parent of this node.\nPrepends a new child to this node.\nPrepends a child to this node.\nReturns the previous sibling of this node.\nReturns the previous sibling of this node.\nReturns an iterator over previous siblings.\nReparents the children of a node, appending them to this …\nReparents the children of a node, prepending them to this …\nReturns a reference to the root node.\nReturns a mutator of the root node.\nReturns an iterator which traverses the subtree starting …\nReturns the tree owning this node.\nReturns the tree owning this node.\nCreates a tree from expressions.\nReturns the value of this node.\nReturns the value of this node.\nReturns an iterator over values in insert order.\nReturns a mutable iterator over values in insert order.\nCreates a tree with a root node and the specified capacity.\nIterator over ancestors.\nIterator over children.\nClose.\nIterator over a node and its descendants.\nOpen or close edge of a node.\nIterator over first children.\nIterator that moves out of a tree in insert order.\nIterator over last children.\nIterator over next siblings.\nIterator over nodes in insert order.\nOpen.\nIterator over previous siblings.\nIterator which traverses a subtree.\nIterator over values in insert order.\nMutable iterator over values in insert order.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")