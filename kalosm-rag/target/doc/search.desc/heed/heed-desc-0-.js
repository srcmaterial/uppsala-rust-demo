searchState.loadedDescShard("heed", 0, "<code>heed</code> is a high-level wrapper of LMDB.\nAppend the given key/data pair to the end of the database.\nAppend the given key/data pair to the end of the database …\nThe specified DBI was changed unexpectedly.\nAttempt to open <code>Env</code> with different options.\nInvalid reuse of reader locktable slot.\nTransaction cannot recover - it must be aborted.\nUnsupported size of key/DB name/data, or wrong DUP_FIXED …\nA boxed <code>Send + Sync + &#39;static</code> error.\nA trait that represents a decoding structure.\nA trait that represents an encoding structure.\nWhether to perform compaction while copying an environment.\nDefine a custom key comparison function for a database.\nLocated page was wrong type.\nCursor stack too deep - internal error.\nThe type to decode.\nWith <code>DatabaseFlags::DUP_SORT</code>, sorted dup items have fixed …\nUse sorted duplicates.\nA typed database that accepts only the types it was …\nDatabase closing in progress.\nLMDB database flags (see …\nOptions and flags which can be used to configure how a …\nStatistics for a database in the environment.\nEnvironment maxdbs reached.\nDecoding error.\nA representation of LMDB’s default comparator behavior.\nDisable the flags.\nCopy everything without taking any special action about …\nThe type to encode.\nEnable the flags.\nOmit free pages and sequentially renumber all pages in …\nEncoding error.\nAn environment handle constructed by using <code>EnvOpenOptions</code>.\nA structure that can be used to wait for the closing event.\nLMDB environment flags (see …\nContains information about the environment.\nOptions and flags which can be used to configure how an …\nContains the error value\nAn error that encapsulates all possible errors in this …\nmmap at a fixed address (experimental).\nWhether to enable or disable flags in <code>Env::set_flags</code>.\nWith [<code>DatabaseKey::DUP_SORT</code>], dups are […\nNumeric keys in native byte order: either <code>u32</code> or <code>usize</code>. …\nOperation and DB incompatible, or DB type changed. This …\nFile is not a valid LMDB file.\nI/O error: can come from the standard library or be a …\nA key/data pair already exists.\nDefine a lexicographic comparator, which is a special case …\nThe underlying LMDB library version information.\nUse asynchronous msync when MDB_WRITEMAP is used.\nEnvironment mapsize reached.\nDatabase contents grew beyond environment mapsize.\nLMDB error.\nAn LMDB error kind.\nEnter the new key/data pair only if it does not already …\nDon’t do any locking, caller must manage their own locks.\nDon’t initialize malloc’d memory before writing to …\nDon’t fsync metapage after commit.\nEnter the new key/data pair only if the key does not …\nDon’t do readahead (no effect on Windows).\nNo environment directory.\nDon’t fsync after commit.\nTie reader locktable slots to MDB_txn objects instead of …\nA key/data pair was not found (EOF).\nContains the success value\nOther error.\nPage has not enough space - internal error.\nRequested page not found - this usually indicates …\nUpdate of meta page failed or environment had fatal error.\nUnexpected problem - transaction should abort.\nLMDB put flags (see …\nRead only.\nWith [<code>DatabaseKey::DUP_SORT</code>], use reverse string dups.\nUse reverse string keys.\nEnvironment maxreaders reached.\nA structure that is used to improve the write speed in …\nEither a success or an <code>Error</code>.\nA read-only iterator structure.\nA read-only prefix iterator structure.\nA read-only range iterator structure.\nA reverse read-only iterator structure.\nA reverse read-only prefix iterator structure.\nA reverse read-only range iterator structure.\nA read-only transaction.\nA read-write iterator structure.\nA read-write prefix iterator structure.\nA read-write range iterator structure.\nA reverse read-write iterator structure.\nA reverse read-write prefix iterator structure.\nA reverse read-write range iterator structure.\nA read-write transaction.\nToo many TLS keys in use - Windows only.\nTxn has too many dirty pages.\nAn unspecified type.\nEnvironment version mismatch.\nUse writable mmap.\nAbandon all the operations of the transaction instead of …\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a slice of bytes corresponding to the <em>entire</em> reserved …\nMarks the bytes in the range <code>0..len</code> as being initialized …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nNumber of internal (non-leaf) pages\nDecode the given bytes as <code>DItem</code>.\nEncode the given item as bytes.\nDeletes all key/value pairs in this database.\nCheck for stale entries in the reader lock table and clear …\nCommit a read transaction.\nCommit all the operations of a transaction into the …\nCompares the raw bytes representation of two keys.\nCompare a single byte; this function is used to implement …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nA cookbook of examples on how to use heed. Here is the …\nCopy an LMDB environment to the specified file descriptor, …\nCopy an LMDB environment to the specified path, with …\nCreates a typed database that can already exist in this …\nCreates a typed database that can already exist in this …\nOptions and flags which can be used to configure how a …\nDelete the entry the cursor is currently pointing to.\nDelete the entry the cursor is currently pointing to.\nDelete the entry the cursor is currently pointing to.\nDelete the entry the cursor is currently pointing to.\nDelete the entry the cursor is currently pointing to.\nDelete the entry the cursor is currently pointing to.\nDeletes an entry or every duplicate data items of a key if …\nDeletes a single key-value pair in this database.\nDeletes a range of key-value pairs in this database.\nDepth (height) of the B-tree.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nNumber of data items.\nReturns a struct that allows to wait for the effective …\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nFills the remaining reserved space with zeroes.\nRetrieves the first key/value pair of this database.\nSpecify the set of flags used to open the database.\nSet one or more LMDB flags.\nReturn the raw flags the environment was opened with.\nFlush the data buffers to disk.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConverts a raw error code to an <code>Error</code>.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nRetrieves the value associated with a key.\nReturns an iterator over all of the values of a single key.\nReturn the raw flags the environment is currently set with.\nRetrieves the key/value pair greater than the given one in …\nRetrieves the key/value pair greater than or equal to the …\nRetrieves the key/value pair lower than the given one in …\nRetrieves the key/value pair lower than or equal to the …\nAttempt to insert a key-value pair in this database, or if …\nAttempt to insert a key-value pair in this database, where …\nAttempt to insert a key-value pair in this database, where …\nAttempt to insert a key-value pair in this database, or if …\nReturns some basic informations about this environment.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nReturns <code>true</code> if and only if this database is empty.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nReturn a lexicographically ordered iterator of all …\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nReturn a mutable lexicographically ordered iterator of all …\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe set of possible iteration methods for the different …\nChange the customized key compare function of the database.\nRetrieves the last key/value pair of this database.\nID of the last used page.\nID of the last committed transaction.\nWrap the data bytes into a lazy decoder.\nWrap the data bytes into a lazy decoder.\nWrap the data bytes into a lazy decoder.\nWrap the data bytes into a lazy decoder.\nWrap the data bytes into a lazy decoder.\nWrap the data bytes into a lazy decoder.\nWrap the data bytes into a lazy decoder.\nWrap the data bytes into a lazy decoder.\nWrap the data bytes into a lazy decoder.\nWrap the data bytes into a lazy decoder.\nWrap the data bytes into a lazy decoder.\nWrap the data bytes into a lazy decoder.\nWrap the data bytes into a lazy decoder.\nNumber of leaf pages.\nReturns the number of elements in this database.\nReturn the LMDB library version information.\nThe library major version number.\nAddress of the map, if fixed.\nSet the size of the memory map to use for this environment.\nSize of the data memory map.\nSet the maximum number of named databases for the …\nReturns the maximum byte value per the comparator’s …\nGet the maximum size of keys and MDB_DUPSORT data we can …\nSet the maximum number of threads/reader slots for the …\nMaximum number of reader slots in the environment.\nReturns the minimum byte value per the comparator’s …\nThe library minor version number.\nMove on the first value of keys, ignoring duplicate values.\nMove on the first value of keys, ignoring duplicate values.\nMove on the first value of keys, ignoring duplicate values.\nMove on the first value of keys, ignoring duplicate values.\nMove on the first value of keys, ignoring duplicate values.\nMove on the first value of keys, ignoring duplicate values.\nMove on the first value of keys, ignoring duplicate values.\nMove on the first value of keys, ignoring duplicate values.\nMove on the first value of keys, ignoring duplicate values.\nMove on the first value of keys, ignoring duplicate values.\nMove on the first value of keys, ignoring duplicate values.\nMove on the first value of keys, ignoring duplicate values.\nMove through key/values entries and output duplicate …\nMove through key/values entries and output duplicate …\nMove through key/values entries and output duplicate …\nMove through key/values entries and output duplicate …\nMove through key/values entries and output duplicate …\nMove through key/values entries and output duplicate …\nMove through key/values entries and output duplicate …\nMove through key/values entries and output duplicate …\nMove through key/values entries and output duplicate …\nMove through key/values entries and output duplicate …\nMove through key/values entries and output duplicate …\nMove through key/values entries and output duplicate …\nChange the name of the database.\nCreate a nested transaction with read and write access for …\nCreate an options struct to open/create a database with …\nCreates a blank new set of options ready for configuration.\nReturns the size used by all the databases in the …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nReturns <code>true</code> if the given error is <code>Error::NotFound</code>.\nNumber of reader slots used in the environment.\nOpens a typed database that already exists in this …\nOpen an environment that will be located at the specified …\nOpens a typed database that already exists in this …\nNumber of overflow pages.\nSize of a database page. This is currently the same for …\nThe library patch version number.\nReturns the canonicalized path where this env lives.\nMoves the given <code>elem</code> to its immediate lexicographic …\nReturn a lexicographically ordered iterator of all …\nReturn a mutable lexicographically ordered iterator of all …\nReturns an <code>EnvClosingEvent</code> that can be used to wait for …\nInsert a key-value pair in this database, replacing any …\nWrite a new value to the current entry.\nWrite a new value to the current entry.\nWrite a new value to the current entry.\nWrite a new value to the current entry.\nWrite a new value to the current entry.\nWrite a new value to the current entry.\nWrite a new value to the current entry. The entry is …\nWrite a new value to the current entry. The entry is …\nWrite a new value to the current entry. The entry is …\nWrite a new value to the current entry. The entry is …\nWrite a new value to the current entry. The entry is …\nWrite a new value to the current entry. The entry is …\nInsert a key-value pair in this database. The entry is …\nInsert a key-value pair in this database. The entry is …\nInsert a key-value pair in this database. The entry is …\nInsert a key-value pair in this database. The entry is …\nInsert a key-value pair in this database. The entry is …\nInsert a key-value pair in this database. The entry is …\nInsert a key-value pair where the value can directly be …\nInsert a key-value pair in this database, replacing any …\nReturn a lexicographically ordered iterator of a range of …\nReturn a mutable lexicographically ordered iterator of a …\nCreate a transaction with read-only access for use with …\nThe size of the data file on disk.\nThe remaining number of bytes that this memory buffer has.\nChange the data codec type of this database, specifying …\nChange the data codec type of this iterator, specifying …\nChange the data codec type of this iterator, specifying …\nChange the data codec type of this iterator, specifying …\nChange the data codec type of this iterator, specifying …\nChange the data codec type of this iterator, specifying …\nChange the data codec type of this iterator, specifying …\nChange the data codec type of this iterator, specifying …\nChange the data codec type of this iterator, specifying …\nChange the data codec type of this iterator, specifying …\nChange the data codec type of this iterator, specifying …\nChange the data codec type of this iterator, specifying …\nChange the data codec type of this iterator, specifying …\nChange the key codec type of this database, specifying the …\nChange the key codec type of this iterator, specifying the …\nChange the key codec type of this iterator, specifying the …\nChange the key codec type of this iterator, specifying the …\nChange the key codec type of this iterator, specifying the …\nChange the key codec type of this iterator, specifying the …\nChange the key codec type of this iterator, specifying the …\nChange the key codec type of this iterator, specifying the …\nChange the key codec type of this iterator, specifying the …\nChange the key codec type of this iterator, specifying the …\nChange the key codec type of this iterator, specifying the …\nChange the key codec type of this iterator, specifying the …\nChange the key codec type of this iterator, specifying the …\nChange the codec types of this database, specifying the …\nChange the codec types of this iterator, specifying the …\nChange the codec types of this iterator, specifying the …\nChange the codec types of this iterator, specifying the …\nChange the codec types of this iterator, specifying the …\nChange the codec types of this iterator, specifying the …\nChange the codec types of this iterator, specifying the …\nChange the codec types of this iterator, specifying the …\nChange the codec types of this iterator, specifying the …\nChange the codec types of this iterator, specifying the …\nChange the codec types of this iterator, specifying the …\nChange the codec types of this iterator, specifying the …\nChange the codec types of this iterator, specifying the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nResize the memory map to a new size.\nReturn a reversed lexicographically ordered iterator of …\nReturn a mutable reversed lexicographically ordered …\nReturn a reversed lexicographically ordered iterator of …\nReturn a mutable reversed lexicographically ordered …\nReturn a reversed lexicographically ordered iterator of a …\nReturn a mutable reversed lexicographically ordered …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nEnable or disable the environment’s currently active …\nThe total number of bytes that this memory buffer has.\nReturns some statistics for this database.\nCreate a transaction with read-only access for use with …\nThe library version as a string.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nAdvances the given <code>elem</code> to its immediate lexicographic …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nConverts an <code>Error</code> to the raw error code.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nChange the type of the database.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nBlocks this thread until the environment is effectively …\nBlocks this thread until either the environment has been …\nCreate a transaction with read and write access for use …\nGet a slice of all the bytes that have previously been …\nThe env opened with the original options.\nThe options that were used to originally open this env.\nThe trait used to define the way iterators behave.\nThe internal operation to move the cursor through entries.\nMoves between keys and ignores the duplicate values of …\nMoves only on the duplicate values of a given key and …\nMoves to the next or previous key if there are no more …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")