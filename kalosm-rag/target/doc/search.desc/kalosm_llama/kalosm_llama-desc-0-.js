searchState.loadedDescShard("kalosm_llama", 0, "RLlama\nAn error loading the chat template.\nAn error occurred while loading the config.\nAn error occurred while loading the model onto the device.\nA growable kv cache. This cache wraps candles <code>KvCache</code> with …\nA quantized Llama language model with support for …\nA builder with configuration for a Llama model.\nA cache for llama inference. This cache will speed up …\nA Llama chat session.\nA Llama session with cached state for the current fed …\nA source for the Llama model.\nErrors that can occur when loading the Llama model.\nAn error occurred while loading the model (from the cache …\nThe task loading the model panicked.\nNo stop token was found.\nNo tokenizer was provided and the ggml file format does …\nA growable tensor cache. This cache wraps candles [<code>Cache</code>] …\nAn error occurred while loading the tokenizer.\nCreate a candle device that uses any available accelerator.\nGet the current tensor in the cache.\nAppend a new key/value pair to the cache.\nAppend a new value to the cache.\nBuild the model (this will download the model if it is not …\nBuild the model with a handler for progress as the …\nCreate a new builder for a Llama model.\nGet the raw cache.\nGet the raw cache.\nGet the raw cache mutably.\nGet the raw cache mutably.\nClear the cache.\nClear a <code>Vec&lt;T&gt;</code> and copy the contents of a tensor into it.\nA preset for the DeepSeek-R1 distill llama 8b model\nA preset for the DeepSeek-R1 distill qwen 14b model\nA preset for the DeepSeek-R1 distill qwen 1.5b model\nA preset for the DeepSeek-R1 distill qwen 7b model\nGet the default constraints for an assistant response. It …\nGet the constraints that end the assistant’s response.\nCheck if the file exists locally (if it is a local file or …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a cache from a tensor map. This can be used to load …\nCreate a cache from a tensor map. This can be used to load …\nGet the file from the cache, downloading it if necessary\nGet the tensor map for this cache. This can be used to …\nExport the current cache tensor map.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA preset for Llama13b\nA preset for Llama13bChat\nA preset for Llama13bCode\nA preset for Llama34bCode\nA preset for Llama8b v3.1 Instruct\nA preset for Llama 2.3 1b\nA preset for Llama 2.3 3b\nA preset for Llama70b\nA preset for Llama70bChat\nA preset for Llama7b v2\nA preset for Llama7bChat\nA preset for Llama7bCode\nA preset for Llama8b v3\nA preset for Llama8b v3\nA preset for Llama8b v3 at the Q8_0 quantization level. …\nA preset for Llama8b SPPO Iter3\nWrap a closure in a release pool if the metal feature is …\nA preset for Mistral7b\nA preset for Mistral7bInstruct\nA preset for Mistral7bInstruct v0.2\nA preset for Neural Chat v3.3\nA preset for NeuralHermes-2.5-Mistral-7B-GGUF\nCreate a new cache with a specific location\nCreate a new cache with the given max sequence length.\nCreate a new cache with the given max sequence length.\nCreate a new cache for a model\nCreate a new source for the Llama model.\nCreate a default text generation model.\nCreate a default chat model.\nA preset for Open chat 3.5 (0106)\nCreate a default phi-3 chat model.\nA preset for Phi-3-mini-4k-instruct with the updated …\nA preset for Phi-3.5-mini-4k-instruct with the updated …\nA preset for Phi-3-mini-4k-instruct\nA preset for phi 4 (14b)\nA prelude of commonly used items in kalosm-llama.\nA preset for the Qwen2.5-0.5B Chat model\nA preset for the Qwen2.5-1.5B Chat model\nA preset for the Qwen2.5-3B Chat model\nA preset for the Qwen2.5-7B Chat model\nReset the cache.\nReset the cache.\nImport a cache tensor map.\nA preset for the SOLAR 10.7B model\nA preset for the SOLAR 10.7B Instruct model\nA preset for Starling 7b Alpha\nA preset for Starling 7b Beta\nA preset for tiny llama 1.1b 1.0\nA preset for tiny llama 1.1b 1.0 Chat\nGet the tokenizer for the model.\nSet the cache location to use for the model (defaults …\nSet the config to use for the model. Kalosm will try to …\nSet the device to run the model with. (Defaults to an …\nSet whether to use Flash Attention.\nSet the group query attention for the model For the llama …\nSet the Hugging Face token to use for downloading …\nSet the model to use for the model\nOverride the stop token string. This is useful for models …\nSet the source for the model.\nSet the tokenizer to use for the model. Kalosm will try to …\nA preset for WizardLM 2 7B\nA preset for Zephyr7bAlpha\nA preset for Zephyr7bBeta\nA constraints for <code>CreateDefaultChatConstraintsForType</code> that …\nA boxed <code>ChatModel</code>.\nA boxed <code>ChatSession</code>.\nA constraints for <code>CreateDefaultCompletionConstraintsForType</code>…\nA boxed <code>StructuredChatModel</code>.\nA boxed <code>BoxedStructuredTextCompletionModel</code>.\nA boxed <code>TextCompletionModel</code>.\nA boxed <code>TextCompletionSession</code>.\nEmbedding models can be expensive to run. This struct …\n<code>Chat</code> is a chat interface that builds on top of …\nA single item in the chat history.\nA trait for unstructured chat models. This trait is …\nAn extension trait for chat models with helpers for …\nA builder for a chat response. This is returned by …\nChat Session\nThe type of chat session.\nA trait for creating a chat session. While it the core …\nA trait that defines the default constraints for a type …\nA trait that defines the default constraints for a type …\nA trait for creating a text completion session for a …\nThe default constraints for this type that work with this …\nThe default constraints for this type that work with this …\nThe model should output an embedding for documents.\nA trait object for an embedder.\nA model that can be used to embed text. This trait is …\nAn extension trait for <code>Embedder</code> that allows for caching …\nAn extension trait for <code>Embedder</code> with helper methods for …\nEmbeddings\nThe input to an embedding model. This includes the text to …\nThe type of embedding the model should output. For models …\nThe error type that can occur when embedding a string.\nThe type of error the session may return during operations.\nThe type of error this model may return during operations.\nAn error that can occur when creating the model.\nThe type of error the chat session may return during …\nThe type of error the chat session may return during …\nParameters to use when generating text.\nA trait for types that can be converted into a chat …\nConvert a type into an embedding with an embedding model.\nA Llama session with cached state for the current fed …\nThe type of a chat message\nThe model that this trait creates.\nA model answer.\nA builder that can create a model asynchronously.\nA type that can constrain the output of a model into a …\nA marker type that indicates that no constraints were …\nThe type of the output of the constraints.\nThe model should output an embedding for a query.\nThe type of the session that this model uses.\nAn extension trait for <code>Stream</code>s that provides a variety of …\nA trait for unstructured chat models that support …\nA trait for text completion models that support structured …\nA system prompt message. System prompts should always be …\nA task session lets you efficiently run a task with a …\nA builder for a text completion response. This is returned …\nA trait for unstructured text completion models. This …\nText Completion Models\nText Completion Session\nA user message.\nAdds a user message to the chat session and streams the …\nAdd messages to the chat session with a callback that is …\nAdd messages to the chat session with a callback that is …\nExecute predicate over asynchronous stream, and return <code>true</code>…\nExecute predicate over asynchronous stream, and return <code>true</code>…\nCreate a sampler chain from the generation parameters …\nWrap the stream in a Box, pinning it.\nErase the type of the chat model. This can be used to make …\nErase the type of the text completion model. This can be …\nWrap the stream in a Box, pinning it.\nErase the type of the structured chat model. This can be …\nErase the type of the structured text completion model. …\nAn adaptor for creating a buffered list of pending futures …\nAn adaptor for creating a buffered list of pending futures.\nBorrows a stream, rather than consuming it.\nWrap the embedder with a cache for previously computed …\nCatches unwinding panics while polling the stream.\nAdapter for chaining two streams.\nCreate a new chat session with the model. Let’s start …\nGet a reference to the underlying chat session.\nAn adaptor for chunking up items of the stream inside a …\nTransforms a stream into a collection, returning a future …\nCreate a new text completion builder for this model. See …\nConcatenate all items of a stream into a single extendable …\nReturns the content of the item.\nCompute the cosine similarity between this embedding and …\nDrives the stream to completion, counting the number of …\nCreate <code>Self::DefaultConstraints</code> which parse the type <code>T</code> for …\nCreate <code>Self::DefaultConstraints</code> which parse the type <code>T</code> for …\nRepeats a stream endlessly.\nEmbed some text into a vector space\nEmbed a batch of text into a vector space. Returns a list …\nEmbed a batch of <code>EmbeddingInput</code> into a vector space. …\nEmbed a <code>EmbeddingInput</code> into a vector space\nEmbed a single string.\nEmbed a query into a vector space\nEmbed some text into a vector space.\nEmbed a <code>Vec&lt;String&gt;</code> into a vector space. Returns a list of …\nEmbed a batch of strings.\nEmbed a <code>Vec&lt;String&gt;</code> into a vector space. Returns a list of …\nCreates a stream which gives the current iteration count …\nGet the eta to use when generating text.\nReturn a serializable cache of the embeddings for future …\nFilters the values produced by this stream according to …\nFilters the values produced by this stream while …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nExecute an accumulating asynchronous computation over a …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLoading sessions\nLoading sessions\nCreate a new task from an existing chat session.\nFuse a stream such that <code>poll_next</code> will never again be …\nGet a reference to the underlying embedder.\nGet a mutable reference to the underlying embedder.\nSession History\nDo something with each item of this stream, afterwards …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdds a user message to the chat session and streams the …\nConvert this embedder into an embedder trait object.\nConvert the type into a chat message.\nConvert the type into an embedding with the given …\nConverts this stream into a future of …\nConvert the type into a query embedding with the given …\nWrap this stream in an <code>Either</code> stream, making it the …\nLoad the cache from a file.\nMaps this stream’s items to a different type, returning …\nGet the maximum length to use when generating text.\nGet the mirostat2 sampler from the generation parameters.\nGet the mu to use when generating text.\nCreate a new cached embedding model.\nCreate a new embedding from a tensor.\nCreate a new chat session with the default settings.\nCreate a new embedding input.\nCreate a new <code>GenerationParameters</code>\nCreate a new task with no constraints and the default …\nCreates a new chat history item.\nCreate a new chat session for this model.\nCreate a new session for this model.\nCreate a new cached embedding model with a custom hasher.\nCreates a future that resolves to the next item in the …\nCreates a new stream which exposes a <code>peek</code> method.\nA convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>\nA simple helper function for prompting the user for input.\nAn adaptor for chunking up ready items of the stream …\nGet the repetition penalty to use when generating text.\nGet the repetition penalty range to use when generating …\nCheck if the model will need to be downloaded before use …\nWrap this stream in an <code>Either</code> stream, making it the …\nReturns the type of the chat message.\nRun the task with a message.\nCreate a sampler chain from the generation parameters.\nCombinator similar to <code>StreamExt::fold</code> that holds internal …\nGet the seed to use when generating text.\nReturns a <code>Future</code> that resolves when the next item in this …\nGet a reference to the chat session or an error if the …\nCreates a new stream which skips <code>n</code> items of the underlying …\nSkip elements on this stream while the provided …\nStart the model.\nStart the model with a loading handler.\nGet the string to stop on when generating text.\nGenerate text with the given prompt.\nGenerate text with the given prompt and the given …\nCreates a new stream of at most <code>n</code> items of the underlying …\nTake elements from this stream until the provided future …\nTake elements from this stream while the provided …\nCreate a new task with the model.\nGet the tau to use when generating text.\nGet the temperature to use when generating text.\nThe text to embed.\nComputes from this stream’s items new items of a …\nLoading sessions\nLoading sessions\nCloning Sessions\nCloning Sessions\nConstrains the model’s response to the the default …\nConstrains the model’s response to the the default …\nCreate a task with the default constraints for the given …\nConverts a stream of pairs into a future, which resolves …\nThe type of embedding to embed the text into.\nGet the tensor that represents this embedding.\nConstrains the model’s response to the given parser. …\nConstrains the model’s response to the given parser. …\nSet the constraints for the task. The constraints force …\nSet the eta to use when generating text.\nAdd an example to the task. Examples help the model …\nAdd multiple examples to the task. Examples help the model …\nSet the maximum length to use when generating text.\nSet the mu to use when generating text.\nSet the repetition penalty to use when generating text.\nSet the repetition penalty range to use when generating …\nSets the sampler to use for generating responses. The …\nSets the sampler to use for generating responses. The …\nSet the seed to use when generating text.\nStarts the chat instance with the given model session. …\nSet the string to stop on when generating text.\nAdds a system prompt to the chat. The system prompt guides …\nSet the tau to use when generating text.\nSet the temperature to use when generating text.\nSet the top_k parameter to the generation parameters (only …\nSet the top_p parameter to the generation parameters (only …\nSerialize the session into bytes. This method is identical …\nSerialize the session into bytes.\nAn adapter for zipping two streams together.\nA schema that matches any of the composite schemas\nA schema that matches any of the composite schemas\nA boxed parser.\nAn array schema\nA schema for an array\nA boolean\nA boolean schema\nA schema for a boolean\nA parser for a choice of two parsers.\nState of a choice parser.\nA constant schema\nA schema for a constant\nA trait for a parser with a default state.\nA value that can be one of two types.\nEither the first or the second parser\nAn error that can occur while parsing a float literal when …\nAn enum schema\nA schema for an enum\nContains the error value\nThe parser is finished.\nThe parser is finished.\nThe first parser is incomplete.\nThe first parser is incomplete.\nA parser for a float.\nThe state of an integer parser.\nA parser for <code>i16</code>.\nA parser for <code>i32</code>.\nA parser for <code>i64</code>.\nA parser for <code>i8</code>.\nAn if-then schema\nA schema for an conditional schema\nThe parser is incomplete.\nThe parser is incomplete.\nA parser that parses a sequence of parsers and returns the …\nThe state of the <code>IndexParser</code> parser\nAn integer schema\nA parser for an integer.\nThe state of an integer parser.\nA schema for an integer\nAn error that can occur while parsing a float literal when …\nAn error that can occur while parsing a float literal when …\nThe item is in progress.\nA schema for an object\nA schema for a property of an object\nA parser that is lazily initialized.\nAn error that can occur while parsing a float literal when …\nThe value is the left type.\nA literal string\nThe error type for a literal parser.\nA parser for a literal.\nThe state of a literal parser.\nA parser that maps the output of another parser.\nThe null value\nThe null schema\nA number\nA number\nA floating point or integer schema\nA schema for a number (floating point or integer)\nAn object schema\nContains the success value\nOne line of text with some non-whitespace characters\nAn error that can occur when parsing a <code>OneLine</code>\nThe state of the <code>OneLine</code> parser\nA schema that matches one of the composite schemas\nA schema that matches one of the composite schemas\nAn error that can occur while parsing a float literal when …\nThe output of the parser.\nA parser for a choice between two parsers.\nData that can be parsed incrementally.\nDerive a default JSON parser for a unit value, struct or …\nA result type for parsers.\nThe state of a parser.\nAn incremental parser for a structured input.\nAn error that occurred while parsing.\nAn extension trait for parsers.\nThe state of the parser.\nA parser that uses a regex pattern to parse input.\nThe state of a regex parser.\nA parser for a repeat of two parsers.\nState of a repeat parser.\nThe value is the right type.\nA description of the format of a type\nA literal value in a schema\nThe type of a schema\nThe first parser is finished, and the second parser is …\nThe first parser is finished, and the second parser is …\nAn auto trait for a Send parser with a default state.\nA single word.\nA parser for a word.\nThe state of the item in the separated parser.\nA parser for a repeat of two parsers.\nState of a repeat parser.\nThe separator is in progress.\nA parser for a sequence of two parsers.\nState of a sequence parser.\nA parser that parses until a literal is found.\nThe state of a stop on literal parser.\nAn error that can occur while parsing a string literal.\nA string\nA string schema\nAn error that can occur while parsing a string literal.\nA parser for an ascii string.\nThe state of a literal parser.\nA schema for a string\nA validator for a string\nThe state of a structure parser.\nThe first parser, then the second parser\nA parser that is initialized lazily based on the state of …\nState of a then lazy parser.\nA parser for <code>u16</code>.\nA parser for <code>u32</code>.\nA parser for <code>u64</code>.\nA parser for <code>u8</code>.\nA parser with lazy initial state\nA single word.\nA parser for a word.\nOnly parse alphanumeric text and spaces (the character …\nBail out with the given error.\nGet a boxed version of this parser.\nCreate the default state of the parser.\nOnly allow characters that pass the filter.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse this parser, then the other parser while ignoring …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the literal that this parser stops on.\nMap the result of the parser.\nMap the output of this parser.\nMap the state of the parser.\nCreate a new error with the given message.\nCreate a new parser that is lazily initialized based on …\nCreate a new default word parser\nCreate a new default sentence parser\nCreate a new <code>RegexParser</code> from a regex pattern.\nCreate a new parser with initial state\nCreate a new parser that is lazily initialized.\nCreate a new integer parser.\nCreate a new float parser.\nCreate a new literal parser.\nCreate a new literal parser state.\nCreate a new choice parser state.\nCreate a new choice parser.\nCreate a new sequence parser state.\nCreate a new sequence parser.\nCreate a new then lazy parser state.\nCreate a new string parser.\nCreate a new literal parser state.\nCreate a new repeat parser state.\nCreate a new repeat parser.\nCreate a new repeat parser state.\nCreate a new repeat parser.\nCreate a new parser.\nCreate a new parser.\nCreate a new parser.\nCreate a new parser.\nCreate a new parser.\nCreate a new parser.\nCreate a new parser.\nCreate a new parser.\nCreate a new word.\nCreate a new word.\nCreate a new literal parser.\nCreate a new stop on literal parser state.\nCreate a new if-then schema\nCreate a new any of schema\nCreate a new one of schema\nCreate a new const schema\nCreate a new enum schema\nCreate a new string schema\nCreate a new number schema\nCreate a new integer schema\nCreate a new boolean schema\nCreate a new array schema\nCreate a new object schema\nCreate a new property schema\nCreate a new index parser\nCreate a new parser that parses the current type and can …\nParse this parser, or another other parser with the same …\nParse this parser, or another other parser.\nParse the given input.\nOnly parse plain text that matches the character filter ‘…\nRepeat this parser a number of times.\nGet the schema for the type\nParse this parser, then the other parser.\nParse this parser, then the other parser while ignoring …\nParse this parser, then the other parser that is created …\nParse this parser, then a literal. This is equivalent to …\nUnwrap the parser to a finished result.\nUnwrap the parser to an incomplete result.\nOnly allow characters that pass the filter.\nSet the description of the object\nSet the description of the property\nCreate a new parser with a different initial state\nSet the length range of the string\nSet the length range of the array\nSet a regex pattern the string must match\nSet the range of the integers that this parser can parse.\nSet the range of the integers that this parser can parse.\nSet the range of the integers that this parser can parse.\nSet the range of the integers that this parser can parse.\nSet the range of the integers that this parser can parse.\nSet the range of the integers that this parser can parse.\nSet the range of the integers that this parser can parse.\nSet the range of the integers that this parser can parse.\nSet the range of the number\nSet whether the property is required\nSet the title of the object\nTake the remaining bytes from the parser.\nThe new state of the parser.\nThe remaining input.\nThe text that is required next.\nThe result of the parser.\nThe new state of the parser.\nThe remaining input.\nThe text that is required next.\nThe result of the parser.\nThe first parser\nThe first parser\nIf the number must be an integer\nThe maximum value of the number\nThe minimum value of the number\nThe second parser\nThe second parser\nThe result of the first parser.\nThe second parser.\nThe state of the second parser.")