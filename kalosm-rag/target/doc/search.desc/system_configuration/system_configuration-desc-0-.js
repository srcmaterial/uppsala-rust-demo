searchState.loadedDescShard("system_configuration", 0, "SystemConfiguration bindings\nCoreFoundation wrappers\nBindings to <code>SCDynamicStore</code>.\nBindings for <code>SCNetworkConfiguration</code>.\nBindings for <code>SCNetworkReachability</code>\nBindings to <code>SCPreferences</code>.\nLow-level SystemConfiguration bindings\nAccess to the key-value pairs in the dynamic store of a …\nBuilder for <code>SCDynamicStore</code> sessions.\nStruct describing the callback happening when a watched …\nSignature for callback functions getting called when a …\nCreate the dynamic store session.\nSet a callback context (callback function and data to pass …\nThe callback function that will be called when a watched …\nCreates a run loop source object that can be added to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf the given key exists in the store, the associated value …\nReturns the keys that represent the current dynamic store …\nReturns the key-value pairs that represent the current …\nThe argument passed to each <code>callout</code> call. Can be used to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new builder. <code>name</code> is used as the name parameter …\nRemoves the value of the specified key from the dynamic …\nSet wether or not the created <code>SCDynamicStore</code> should have …\nSets the value of the given key. Overwrites existing …\nSpecifies a set of keys and key patterns that should be …\nSets the value of the given key. Overwrites existing …\nBluetooth interface.\nEthernet bond interface.\nBridge interface.\nEthernet interface.\nFireWire interface.\nIEEE80211 interface.\nIPSec interface.\nIPv4 interface.\nIrDA interface.\nL2TP interface.\nModem interface.\nPPP interface.\nPPTP interface.\nRepresents a network interface.\nRepresents the possible network interface types.\nRepresents a network service.\nRepresents a complete network configuration for a …\nSerial interface.\nA 6to4 interface.\nVLAN interface.\nWWAN interface.\nReturns the <em>BSD</em> name for the interface, such as <code>en0</code>.\nReturns the localized display name for the interface.\nReturns true if the network service is currently enabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTries to construct a type by matching it to string …\nRetrieve all current network interfaces\nReturns an array of all network services\nReturns the service identifier.\nGet type of the network interface, if the type is …\nReturns the raw interface type identifier.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the network interface backing this network …\nConstructs a new set of network services from the …\nReturns an list of network service identifiers, ordered by …\nThe specified node name or address can be reached using …\nThe specified node name or address can be reached using …\nThe specified node name or address can be reached using …\n<code>SCNetworkReachabilityGetFlags</code> call failed.\nThe specified node name or address can be reached using …\nNetwork traffic to the specified node name or address will …\nThe specified node name or address is one that is …\nThe specified node name or address can be reached via a …\nThe specified node name or address can be reached using …\nFailure to determine reachability\nRustier interface for <code>SCNetworkReachabilityFlags</code>.\nA network address or host for which the connectivity can …\nFailure to schedule a reachability callback on a runloop.\nFailure to set a callback for changes in reachability.\nThe specified node name or address can be reached via a …\n<code>SCNetworkReachabilityGetFlags</code> call returned unrecognized …\nFailure to unschedule a reachability callback on a runloop.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct a SCNetworkReachability struct with a local and …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConstruct a Reachability from either a hostname or a …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nReturn a flag indicating whether the specified network …\nRemoves the specified flags in-place.\nSchedule callback with runloop.\nInserts or removes the specified flags depending on the …\nSets callback that is run whenever network connectivity …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nUnschedule from run loop.\nThe handle to an open preferences session for accessing …\nInitiates access to the default system preferences using …\nReturns the argument unchanged.\nInitiates access to the given (<code>prefs_id</code>) group of …\nCalls <code>U::from(self)</code>.\nInitiates access to the per-system set of configuration …")