searchState.loadedDescShard("kalosm_language_model", 0, "Language Model\nA constraints for <code>CreateDefaultChatConstraintsForType</code> that …\nA boxed <code>ChatModel</code>.\nA boxed <code>ChatSession</code>.\nA constraints for <code>CreateDefaultCompletionConstraintsForType</code>…\nA boxed <code>StructuredChatModel</code>.\nA boxed <code>BoxedStructuredTextCompletionModel</code>.\nA boxed <code>TextCompletionModel</code>.\nA boxed <code>TextCompletionSession</code>.\nEmbedding models can be expensive to run. This struct …\n<code>Chat</code> is a chat interface that builds on top of …\nA single item in the chat history.\nA trait for unstructured chat models. This trait is …\nAn extension trait for chat models with helpers for …\nA builder for a chat response. This is returned by …\nChat Session\nThe type of chat session.\nA trait for creating a chat session. While it the core …\nA trait that defines the default constraints for a type …\nA trait that defines the default constraints for a type …\nA trait for creating a text completion session for a …\nThe default constraints for this type that work with this …\nThe default constraints for this type that work with this …\nThe model should output an embedding for documents.\nA trait object for an embedder.\nA model that can be used to embed text. This trait is …\nAn extension trait for <code>Embedder</code> that allows for caching …\nAn extension trait for <code>Embedder</code> with helper methods for …\nEmbeddings\nThe input to an embedding model. This includes the text to …\nThe type of embedding the model should output. For models …\nThe error type that can occur when embedding a string.\nThe type of error the session may return during operations.\nThe type of error this model may return during operations.\nAn error that can occur when creating the model.\nThe type of error the chat session may return during …\nThe type of error the chat session may return during …\nParameters to use when generating text.\nA trait for types that can be converted into a chat …\nConvert a type into an embedding with an embedding model.\nThe type of a chat message\nThe model that this trait creates.\nA model answer.\nA builder that can create a model asynchronously.\nA type that can constrain the output of a model into a …\nA marker type that indicates that no constraints were …\nThe type of the output of the constraints.\nThe model should output an embedding for a query.\nThe type of the session that this model uses.\nAn extension trait for <code>Stream</code>s that provides a variety of …\nA trait for unstructured chat models that support …\nA trait for text completion models that support structured …\nA system prompt message. System prompts should always be …\nA task session lets you efficiently run a task with a …\nA builder for a text completion response. This is returned …\nA trait for unstructured text completion models. This …\nText Completion Models\nText Completion Session\nA user message.\nAdds a user message to the chat session and streams the …\nAdd messages to the chat session with a callback that is …\nAdd messages to the chat session with a callback that is …\nExecute predicate over asynchronous stream, and return <code>true</code>…\nExecute predicate over asynchronous stream, and return <code>true</code>…\nCreate a sampler chain from the generation parameters …\nWrap the stream in a Box, pinning it.\nErase the type of the chat model. This can be used to make …\nErase the type of the chat model. This can be used to make …\nErase the type of the text completion model. This can be …\nErase the type of the text completion model. This can be …\nWrap the stream in a Box, pinning it.\nErase the type of the structured chat model. This can be …\nErase the type of the structured chat model. This can be …\nErase the type of the structured text completion model. …\nErase the type of the structured text completion model. …\nAn adaptor for creating a buffered list of pending futures …\nAn adaptor for creating a buffered list of pending futures.\nBorrows a stream, rather than consuming it.\nWrap the embedder with a cache for previously computed …\nWrap the embedder with a cache for previously computed …\nCatches unwinding panics while polling the stream.\nAdapter for chaining two streams.\nCreate a new chat session with the model. Let’s start …\nCreate a new chat session with the model. Let’s start …\nGet a reference to the underlying chat session.\nAn adaptor for chunking up items of the stream inside a …\nTransforms a stream into a collection, returning a future …\nCreate a new text completion builder for this model. See …\nCreate a new text completion builder for this model. See …\nConcatenate all items of a stream into a single extendable …\nReturns the content of the item.\nCompute the cosine similarity between this embedding and …\nDrives the stream to completion, counting the number of …\nCreate <code>Self::DefaultConstraints</code> which parse the type <code>T</code> for …\nCreate <code>Self::DefaultConstraints</code> which parse the type <code>T</code> for …\nRepeats a stream endlessly.\nEmbed some text into a vector space\nEmbed some text into a vector space\nEmbed a batch of text into a vector space. Returns a list …\nEmbed a batch of text into a vector space. Returns a list …\nEmbed a batch of <code>EmbeddingInput</code> into a vector space. …\nEmbed a batch of <code>EmbeddingInput</code> into a vector space. …\nEmbed a <code>EmbeddingInput</code> into a vector space\nEmbed a single string.\nEmbed a query into a vector space\nEmbed a query into a vector space\nEmbed some text into a vector space.\nEmbed some text into a vector space.\nEmbed a <code>Vec&lt;String&gt;</code> into a vector space. Returns a list of …\nEmbed a <code>Vec&lt;String&gt;</code> into a vector space. Returns a list of …\nEmbed a batch of strings.\nEmbed a <code>Vec&lt;String&gt;</code> into a vector space. Returns a list of …\nEmbed a <code>Vec&lt;String&gt;</code> into a vector space. Returns a list of …\nCreates a stream which gives the current iteration count …\nGet the eta to use when generating text.\nReturn a serializable cache of the embeddings for future …\nFilters the values produced by this stream according to …\nFilters the values produced by this stream while …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nExecute an accumulating asynchronous computation over a …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLoading sessions\nLoading sessions\nCreate a new task from an existing chat session.\nFuse a stream such that <code>poll_next</code> will never again be …\nGet a reference to the underlying embedder.\nGet a mutable reference to the underlying embedder.\nSession History\nDo something with each item of this stream, afterwards …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdds a user message to the chat session and streams the …\nConvert this embedder into an embedder trait object.\nConvert this embedder into an embedder trait object.\nConvert the type into a chat message.\nConvert the type into an embedding with the given …\nConverts this stream into a future of …\nConvert the type into a query embedding with the given …\nWrap this stream in an <code>Either</code> stream, making it the …\nLoad the cache from a file.\nMaps this stream’s items to a different type, returning …\nGet the maximum length to use when generating text.\nGet the mirostat2 sampler from the generation parameters.\nGet the mu to use when generating text.\nCreate a new cached embedding model.\nCreate a new embedding from a tensor.\nCreate a new chat session with the default settings.\nCreate a new embedding input.\nCreate a new <code>GenerationParameters</code>\nCreate a new task with no constraints and the default …\nCreates a new chat history item.\nCreate a new chat session for this model.\nCreate a new session for this model.\nCreate a new cached embedding model with a custom hasher.\nCreates a future that resolves to the next item in the …\nCreates a new stream which exposes a <code>peek</code> method.\nA convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>\nA simple helper function for prompting the user for input.\nAn adaptor for chunking up ready items of the stream …\nGet the repetition penalty to use when generating text.\nGet the repetition penalty range to use when generating …\nCheck if the model will need to be downloaded before use …\nCheck if the model will need to be downloaded before use …\nWrap this stream in an <code>Either</code> stream, making it the …\nReturns the type of the chat message.\nRun the task with a message.\nCreate a sampler chain from the generation parameters.\nCombinator similar to <code>StreamExt::fold</code> that holds internal …\nGet the seed to use when generating text.\nReturns a <code>Future</code> that resolves when the next item in this …\nGet a reference to the chat session or an error if the …\nCreates a new stream which skips <code>n</code> items of the underlying …\nSkip elements on this stream while the provided …\nStart the model.\nStart the model.\nStart the model with a loading handler.\nGet the string to stop on when generating text.\nGenerate text with the given prompt.\nGenerate text with the given prompt and the given …\nCreates a new stream of at most <code>n</code> items of the underlying …\nTake elements from this stream until the provided future …\nTake elements from this stream while the provided …\nCreate a new task with the model.\nCreate a new task with the model.\nGet the tau to use when generating text.\nGet the temperature to use when generating text.\nThe text to embed.\nComputes from this stream’s items new items of a …\nLoading sessions\nLoading sessions\nLoading sessions\nLoading sessions\nCloning Sessions\nCloning Sessions\nConstrains the model’s response to the the default …\nConstrains the model’s response to the the default …\nCreate a task with the default constraints for the given …\nConverts a stream of pairs into a future, which resolves …\nThe type of embedding to embed the text into.\nGet the tensor that represents this embedding.\nConstrains the model’s response to the given parser. …\nConstrains the model’s response to the given parser. …\nSet the constraints for the task. The constraints force …\nSet the eta to use when generating text.\nAdd an example to the task. Examples help the model …\nAdd multiple examples to the task. Examples help the model …\nSet the maximum length to use when generating text.\nSet the mu to use when generating text.\nSet the repetition penalty to use when generating text.\nSet the repetition penalty range to use when generating …\nSets the sampler to use for generating responses. The …\nSets the sampler to use for generating responses. The …\nSet the seed to use when generating text.\nStarts the chat instance with the given model session. …\nSet the string to stop on when generating text.\nAdds a system prompt to the chat. The system prompt guides …\nSet the tau to use when generating text.\nSet the temperature to use when generating text.\nSet the top_k parameter to the generation parameters (only …\nSet the top_p parameter to the generation parameters (only …\nSerialize the session into bytes. This method is identical …\nSerialize the session into bytes.\nAn adapter for zipping two streams together.")