(function() {
    var type_impls = Object.fromEntries([["gemm_f16",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26f16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1023\">Source</a><a href=\"#impl-Add%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1024\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1027\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: &amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&f16>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1014\">Source</a><a href=\"#impl-Add-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1015\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1018\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26f16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1057\">Source</a><a href=\"#impl-AddAssign%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1059\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&f16>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1050\">Source</a><a href=\"#impl-AddAssign-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1052\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cbf16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#722\">Source</a><a href=\"#impl-AsPrimitive%3Cbf16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#722\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"struct\" href=\"half/bfloat/struct.bf16.html\" title=\"struct half::bfloat::bf16\">bf16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<bf16>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#703\">Source</a><a href=\"#impl-AsPrimitive%3Cf16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#705\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f16>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf32%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#720\">Source</a><a href=\"#impl-AsPrimitive%3Cf32%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#720\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f32>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf64%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#721\">Source</a><a href=\"#impl-AsPrimitive%3Cf64%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#721\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f64>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#714\">Source</a><a href=\"#impl-AsPrimitive%3Ci16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#714\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i16>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci32%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#716\">Source</a><a href=\"#impl-AsPrimitive%3Ci32%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#716\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i32>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci64%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#710\">Source</a><a href=\"#impl-AsPrimitive%3Ci64%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#710\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i64>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci8%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#712\">Source</a><a href=\"#impl-AsPrimitive%3Ci8%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#712\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i8>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cisize%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#718\">Source</a><a href=\"#impl-AsPrimitive%3Cisize%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#718\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<isize>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#715\">Source</a><a href=\"#impl-AsPrimitive%3Cu16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#715\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u16>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu32%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#717\">Source</a><a href=\"#impl-AsPrimitive%3Cu32%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#717\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u32>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu64%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#711\">Source</a><a href=\"#impl-AsPrimitive%3Cu64%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#711\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u64>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu8%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#713\">Source</a><a href=\"#impl-AsPrimitive%3Cu8%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#713\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u8>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cusize%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#719\">Source</a><a href=\"#impl-AsPrimitive%3Cusize%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#719\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<usize>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#969\">Source</a><a href=\"#impl-Binary-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#970\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Binary.html#tymethod.fmt\">Read more</a></div></details></div></details>","Binary","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#680\">Source</a><a href=\"#impl-Bounded-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#682\">Source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/bounds/trait.Bounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#687\">Source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/bounds/trait.Bounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","Bounded","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#35\">Source</a><a href=\"#impl-Clone-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#35\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Conj-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/gemm_common/gemm.rs.html#70\">Source</a><a href=\"#impl-Conj-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"gemm_common/gemm/trait.Conj.html\" title=\"trait gemm_common::gemm::Conj\">Conj</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.conj\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gemm_common/gemm.rs.html#72\">Source</a><a href=\"#method.conj\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gemm_common/gemm/trait.Conj.html#tymethod.conj\" class=\"fn\">conj</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></div></details>","Conj","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#941\">Source</a><a href=\"#impl-Debug-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#942\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#35\">Source</a><a href=\"#impl-Default-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#35\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#948\">Source</a><a href=\"#impl-Display-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#949\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26f16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1173\">Source</a><a href=\"#impl-Div%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1174\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1177\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: &amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&f16>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1164\">Source</a><a href=\"#impl-Div-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1165\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1168\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26f16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1207\">Source</a><a href=\"#impl-DivAssign%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1209\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&f16>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1200\">Source</a><a href=\"#impl-DivAssign-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1202\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Float-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#295\">Source</a><a href=\"#impl-Float-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.nan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#297\">Source</a><a href=\"#method.nan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.nan\" class=\"fn\">nan</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the <code>NaN</code> value. <a href=\"num_traits/float/trait.Float.html#tymethod.nan\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infinity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#302\">Source</a><a href=\"#method.infinity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.infinity\" class=\"fn\">infinity</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the infinite value. <a href=\"num_traits/float/trait.Float.html#tymethod.infinity\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg_infinity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#307\">Source</a><a href=\"#method.neg_infinity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.neg_infinity\" class=\"fn\">neg_infinity</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the negative infinite value. <a href=\"num_traits/float/trait.Float.html#tymethod.neg_infinity\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#312\">Source</a><a href=\"#method.neg_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.neg_zero\" class=\"fn\">neg_zero</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns <code>-0.0</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.neg_zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#317\">Source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the smallest finite value that this type can represent. <a href=\"num_traits/float/trait.Float.html#tymethod.min_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_positive_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#322\">Source</a><a href=\"#method.min_positive_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.min_positive_value\" class=\"fn\">min_positive_value</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the smallest positive, normalized value that this type can represent. <a href=\"num_traits/float/trait.Float.html#tymethod.min_positive_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.epsilon\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#327\">Source</a><a href=\"#method.epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#method.epsilon\" class=\"fn\">epsilon</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns epsilon, a small positive value. <a href=\"num_traits/float/trait.Float.html#method.epsilon\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#332\">Source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the largest finite value that this type can represent. <a href=\"num_traits/float/trait.Float.html#tymethod.max_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_nan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#337\">Source</a><a href=\"#method.is_nan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.is_nan\" class=\"fn\">is_nan</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this value is <code>NaN</code> and false otherwise. <a href=\"num_traits/float/trait.Float.html#tymethod.is_nan\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_infinite\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#342\">Source</a><a href=\"#method.is_infinite\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.is_infinite\" class=\"fn\">is_infinite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this value is positive infinity or negative infinity and\nfalse otherwise. <a href=\"num_traits/float/trait.Float.html#tymethod.is_infinite\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_finite\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#347\">Source</a><a href=\"#method.is_finite\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.is_finite\" class=\"fn\">is_finite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.is_finite\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_normal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#352\">Source</a><a href=\"#method.is_normal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.is_normal\" class=\"fn\">is_normal</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the number is neither zero, infinite,\n<a href=\"http://en.wikipedia.org/wiki/Subnormal_number\">subnormal</a>, or <code>NaN</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.is_normal\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.classify\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#357\">Source</a><a href=\"#method.classify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.classify\" class=\"fn\">classify</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/num/enum.FpCategory.html\" title=\"enum core::num::FpCategory\">FpCategory</a></h4></section></summary><div class='docblock'>Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead. <a href=\"num_traits/float/trait.Float.html#tymethod.classify\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#362\">Source</a><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the largest integer less than or equal to a number. <a href=\"num_traits/float/trait.Float.html#tymethod.floor\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#367\">Source</a><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the smallest integer greater than or equal to a number. <a href=\"num_traits/float/trait.Float.html#tymethod.ceil\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#372\">Source</a><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the nearest integer to a number. Round half-way cases away from\n<code>0.0</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.round\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trunc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#377\">Source</a><a href=\"#method.trunc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.trunc\" class=\"fn\">trunc</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return the integer part of a number. <a href=\"num_traits/float/trait.Float.html#tymethod.trunc\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fract\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#382\">Source</a><a href=\"#method.fract\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.fract\" class=\"fn\">fract</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the fractional part of a number. <a href=\"num_traits/float/trait.Float.html#tymethod.fract\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#387\">Source</a><a href=\"#method.abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> if the\nnumber is <code>Float::nan()</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.abs\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#392\">Source</a><a href=\"#method.signum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.signum\" class=\"fn\">signum</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns a number that represents the sign of <code>self</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.signum\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sign_positive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#397\">Source</a><a href=\"#method.is_sign_positive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.is_sign_positive\" class=\"fn\">is_sign_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>,\n<code>Float::infinity()</code>, and <code>Float::nan()</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.is_sign_positive\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sign_negative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#402\">Source</a><a href=\"#method.is_sign_negative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.is_sign_negative\" class=\"fn\">is_sign_negative</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>,\n<code>Float::neg_infinity()</code>, and <code>-Float::nan()</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.is_sign_negative\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#407\">Source</a><a href=\"#method.mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.mul_add\" class=\"fn\">mul_add</a>(self, a: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>, b: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Fused multiply-add. Computes <code>(self * a) + b</code> with only one rounding\nerror, yielding a more accurate result than an unfused multiply-add. <a href=\"num_traits/float/trait.Float.html#tymethod.mul_add\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#412\">Source</a><a href=\"#method.recip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.recip\" class=\"fn\">recip</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Take the reciprocal (inverse) of a number, <code>1/x</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.recip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#417\">Source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.powi\" class=\"fn\">powi</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Raise a number to an integer power. <a href=\"num_traits/float/trait.Float.html#tymethod.powi\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#422\">Source</a><a href=\"#method.powf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.powf\" class=\"fn\">powf</a>(self, n: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Raise a number to a floating point power. <a href=\"num_traits/float/trait.Float.html#tymethod.powf\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sqrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#427\">Source</a><a href=\"#method.sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.sqrt\" class=\"fn\">sqrt</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Take the square root of a number. <a href=\"num_traits/float/trait.Float.html#tymethod.sqrt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#432\">Source</a><a href=\"#method.exp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.exp\" class=\"fn\">exp</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns <code>e^(self)</code>, (the exponential function). <a href=\"num_traits/float/trait.Float.html#tymethod.exp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exp2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#437\">Source</a><a href=\"#method.exp2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.exp2\" class=\"fn\">exp2</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns <code>2^(self)</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.exp2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ln\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#442\">Source</a><a href=\"#method.ln\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.ln\" class=\"fn\">ln</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the natural logarithm of the number. <a href=\"num_traits/float/trait.Float.html#tymethod.ln\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#447\">Source</a><a href=\"#method.log\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.log\" class=\"fn\">log</a>(self, base: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the logarithm of the number with respect to an arbitrary base. <a href=\"num_traits/float/trait.Float.html#tymethod.log\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#452\">Source</a><a href=\"#method.log2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.log2\" class=\"fn\">log2</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the base 2 logarithm of the number. <a href=\"num_traits/float/trait.Float.html#tymethod.log2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log10\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#457\">Source</a><a href=\"#method.log10\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.log10\" class=\"fn\">log10</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the base 10 logarithm of the number. <a href=\"num_traits/float/trait.Float.html#tymethod.log10\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_degrees\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#462\">Source</a><a href=\"#method.to_degrees\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#method.to_degrees\" class=\"fn\">to_degrees</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Converts radians to degrees. <a href=\"num_traits/float/trait.Float.html#method.to_degrees\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_radians\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#467\">Source</a><a href=\"#method.to_radians\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#method.to_radians\" class=\"fn\">to_radians</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Converts degrees to radians. <a href=\"num_traits/float/trait.Float.html#method.to_radians\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#472\">Source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the maximum of the two numbers. <a href=\"num_traits/float/trait.Float.html#tymethod.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#477\">Source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the minimum of the two numbers. <a href=\"num_traits/float/trait.Float.html#tymethod.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#482\">Source</a><a href=\"#method.abs_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.abs_sub\" class=\"fn\">abs_sub</a>(self, other: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>The positive difference of two numbers. <a href=\"num_traits/float/trait.Float.html#tymethod.abs_sub\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cbrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#487\">Source</a><a href=\"#method.cbrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.cbrt\" class=\"fn\">cbrt</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Take the cubic root of a number. <a href=\"num_traits/float/trait.Float.html#tymethod.cbrt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hypot\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#492\">Source</a><a href=\"#method.hypot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.hypot\" class=\"fn\">hypot</a>(self, other: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length <code>x</code> and <code>y</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.hypot\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sin\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#497\">Source</a><a href=\"#method.sin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.sin\" class=\"fn\">sin</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Computes the sine of a number (in radians). <a href=\"num_traits/float/trait.Float.html#tymethod.sin\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cos\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#502\">Source</a><a href=\"#method.cos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.cos\" class=\"fn\">cos</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Computes the cosine of a number (in radians). <a href=\"num_traits/float/trait.Float.html#tymethod.cos\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#507\">Source</a><a href=\"#method.tan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.tan\" class=\"fn\">tan</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Computes the tangent of a number (in radians). <a href=\"num_traits/float/trait.Float.html#tymethod.tan\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.asin\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#512\">Source</a><a href=\"#method.asin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.asin\" class=\"fn\">asin</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1]. <a href=\"num_traits/float/trait.Float.html#tymethod.asin\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.acos\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#517\">Source</a><a href=\"#method.acos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.acos\" class=\"fn\">acos</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1]. <a href=\"num_traits/float/trait.Float.html#tymethod.acos\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.atan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#522\">Source</a><a href=\"#method.atan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.atan\" class=\"fn\">atan</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2]; <a href=\"num_traits/float/trait.Float.html#tymethod.atan\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.atan2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#527\">Source</a><a href=\"#method.atan2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.atan2\" class=\"fn\">atan2</a>(self, other: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code> (<code>x</code>). <a href=\"num_traits/float/trait.Float.html#tymethod.atan2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sin_cos\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#532\">Source</a><a href=\"#method.sin_cos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.sin_cos\" class=\"fn\">sin_cos</a>(self) -&gt; (<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>, <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>)</h4></section></summary><div class='docblock'>Simultaneously computes the sine and cosine of the number, <code>x</code>. Returns\n<code>(sin(x), cos(x))</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.sin_cos\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exp_m1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#538\">Source</a><a href=\"#method.exp_m1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.exp_m1\" class=\"fn\">exp_m1</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns <code>e^(self) - 1</code> in a way that is accurate even if the\nnumber is close to zero. <a href=\"num_traits/float/trait.Float.html#tymethod.exp_m1\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ln_1p\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#543\">Source</a><a href=\"#method.ln_1p\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.ln_1p\" class=\"fn\">ln_1p</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if\nthe operations were performed separately. <a href=\"num_traits/float/trait.Float.html#tymethod.ln_1p\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sinh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#548\">Source</a><a href=\"#method.sinh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.sinh\" class=\"fn\">sinh</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Hyperbolic sine function. <a href=\"num_traits/float/trait.Float.html#tymethod.sinh\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cosh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#553\">Source</a><a href=\"#method.cosh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.cosh\" class=\"fn\">cosh</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Hyperbolic cosine function. <a href=\"num_traits/float/trait.Float.html#tymethod.cosh\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tanh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#558\">Source</a><a href=\"#method.tanh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.tanh\" class=\"fn\">tanh</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Hyperbolic tangent function. <a href=\"num_traits/float/trait.Float.html#tymethod.tanh\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.asinh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#563\">Source</a><a href=\"#method.asinh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.asinh\" class=\"fn\">asinh</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Inverse hyperbolic sine function. <a href=\"num_traits/float/trait.Float.html#tymethod.asinh\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.acosh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#568\">Source</a><a href=\"#method.acosh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.acosh\" class=\"fn\">acosh</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Inverse hyperbolic cosine function. <a href=\"num_traits/float/trait.Float.html#tymethod.acosh\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.atanh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#573\">Source</a><a href=\"#method.atanh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.atanh\" class=\"fn\">atanh</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Inverse hyperbolic tangent function. <a href=\"num_traits/float/trait.Float.html#tymethod.atanh\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integer_decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#578\">Source</a><a href=\"#method.integer_decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.integer_decode\" class=\"fn\">integer_decode</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by <code>sign * mantissa * 2 ^ exponent</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.integer_decode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subnormal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#1137\">Source</a><a href=\"#method.is_subnormal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#method.is_subnormal\" class=\"fn\">is_subnormal</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the number is <a href=\"https://en.wikipedia.org/wiki/Subnormal_number\">subnormal</a>. <a href=\"num_traits/float/trait.Float.html#method.is_subnormal\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#1545\">Source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self</h4></section></summary><div class='docblock'>Clamps a value between a min and max. <a href=\"num_traits/float/trait.Float.html#method.clamp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copysign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#1905\">Source</a><a href=\"#method.copysign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#method.copysign\" class=\"fn\">copysign</a>(self, sign: Self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a number composed of the magnitude of <code>self</code> and the sign of\n<code>sign</code>. <a href=\"num_traits/float/trait.Float.html#method.copysign\">Read more</a></div></details></div></details>","Float","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FloatConst-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#583\">Source</a><a href=\"#impl-FloatConst-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/float/trait.FloatConst.html\" title=\"trait num_traits::float::FloatConst\">FloatConst</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.E\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#585\">Source</a><a href=\"#method.E\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#tymethod.E\" class=\"fn\">E</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return Euler’s number.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.FRAC_1_PI\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#590\">Source</a><a href=\"#method.FRAC_1_PI\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#tymethod.FRAC_1_PI\" class=\"fn\">FRAC_1_PI</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return <code>1.0 / π</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.FRAC_1_SQRT_2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#595\">Source</a><a href=\"#method.FRAC_1_SQRT_2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#tymethod.FRAC_1_SQRT_2\" class=\"fn\">FRAC_1_SQRT_2</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return <code>1.0 / sqrt(2.0)</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.FRAC_2_PI\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#600\">Source</a><a href=\"#method.FRAC_2_PI\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#tymethod.FRAC_2_PI\" class=\"fn\">FRAC_2_PI</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return <code>2.0 / π</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.FRAC_2_SQRT_PI\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#605\">Source</a><a href=\"#method.FRAC_2_SQRT_PI\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#tymethod.FRAC_2_SQRT_PI\" class=\"fn\">FRAC_2_SQRT_PI</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return <code>2.0 / sqrt(π)</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.FRAC_PI_2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#610\">Source</a><a href=\"#method.FRAC_PI_2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#tymethod.FRAC_PI_2\" class=\"fn\">FRAC_PI_2</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return <code>π / 2.0</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.FRAC_PI_3\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#615\">Source</a><a href=\"#method.FRAC_PI_3\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#tymethod.FRAC_PI_3\" class=\"fn\">FRAC_PI_3</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return <code>π / 3.0</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.FRAC_PI_4\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#620\">Source</a><a href=\"#method.FRAC_PI_4\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#tymethod.FRAC_PI_4\" class=\"fn\">FRAC_PI_4</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return <code>π / 4.0</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.FRAC_PI_6\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#625\">Source</a><a href=\"#method.FRAC_PI_6\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#tymethod.FRAC_PI_6\" class=\"fn\">FRAC_PI_6</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return <code>π / 6.0</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.FRAC_PI_8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#630\">Source</a><a href=\"#method.FRAC_PI_8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#tymethod.FRAC_PI_8\" class=\"fn\">FRAC_PI_8</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return <code>π / 8.0</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.LN_10\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#635\">Source</a><a href=\"#method.LN_10\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#tymethod.LN_10\" class=\"fn\">LN_10</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return <code>ln(10.0)</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.LN_2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#640\">Source</a><a href=\"#method.LN_2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#tymethod.LN_2\" class=\"fn\">LN_2</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return <code>ln(2.0)</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.LOG10_E\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#645\">Source</a><a href=\"#method.LOG10_E\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#tymethod.LOG10_E\" class=\"fn\">LOG10_E</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return <code>log10(e)</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.LOG2_E\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#650\">Source</a><a href=\"#method.LOG2_E\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#tymethod.LOG2_E\" class=\"fn\">LOG2_E</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return <code>log2(e)</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.PI\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#655\">Source</a><a href=\"#method.PI\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#tymethod.PI\" class=\"fn\">PI</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return Archimedes’ constant <code>π</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.SQRT_2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#659\">Source</a><a href=\"#method.SQRT_2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#tymethod.SQRT_2\" class=\"fn\">SQRT_2</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return <code>sqrt(2.0)</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.LOG10_2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#664-666\">Source</a><a href=\"#method.LOG10_2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#method.LOG10_2\" class=\"fn\">LOG10_2</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a><div class=\"where\">where\n    <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Output = <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;,</div></h4></section></summary><div class='docblock'>Return <code>log10(2.0)</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.LOG2_10\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#672-674\">Source</a><a href=\"#method.LOG2_10\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#method.LOG2_10\" class=\"fn\">LOG2_10</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a><div class=\"where\">where\n    <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Output = <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;,</div></h4></section></summary><div class='docblock'>Return <code>log2(10.0)</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.TAU\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2210-2243\">Source</a><a href=\"#method.TAU\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatConst.html#method.TAU\" class=\"fn\">TAU</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = Self&gt;,</div></h4></section></summary><div class='docblock'>Return the full circle constant <code>τ</code>.</div></details></div></details>","FloatConst","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FloatCore-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#130\">Source</a><a href=\"#impl-FloatCore-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/float/trait.FloatCore.html\" title=\"trait num_traits::float::FloatCore\">FloatCore</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.infinity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#132\">Source</a><a href=\"#method.infinity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#tymethod.infinity\" class=\"fn\">infinity</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns positive infinity. <a href=\"num_traits/float/trait.FloatCore.html#tymethod.infinity\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg_infinity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#137\">Source</a><a href=\"#method.neg_infinity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#tymethod.neg_infinity\" class=\"fn\">neg_infinity</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns negative infinity. <a href=\"num_traits/float/trait.FloatCore.html#tymethod.neg_infinity\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#142\">Source</a><a href=\"#method.nan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#tymethod.nan\" class=\"fn\">nan</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns NaN. <a href=\"num_traits/float/trait.FloatCore.html#tymethod.nan\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#147\">Source</a><a href=\"#method.neg_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#tymethod.neg_zero\" class=\"fn\">neg_zero</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns <code>-0.0</code>. <a href=\"num_traits/float/trait.FloatCore.html#tymethod.neg_zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#152\">Source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the smallest finite value that this type can represent. <a href=\"num_traits/float/trait.FloatCore.html#tymethod.min_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_positive_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#157\">Source</a><a href=\"#method.min_positive_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#tymethod.min_positive_value\" class=\"fn\">min_positive_value</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the smallest positive, normalized value that this type can represent. <a href=\"num_traits/float/trait.FloatCore.html#tymethod.min_positive_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.epsilon\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#162\">Source</a><a href=\"#method.epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#tymethod.epsilon\" class=\"fn\">epsilon</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns epsilon, a small positive value. <a href=\"num_traits/float/trait.FloatCore.html#tymethod.epsilon\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#167\">Source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the largest finite value that this type can represent. <a href=\"num_traits/float/trait.FloatCore.html#tymethod.max_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_nan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#172\">Source</a><a href=\"#method.is_nan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.is_nan\" class=\"fn\">is_nan</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the number is NaN. <a href=\"num_traits/float/trait.FloatCore.html#method.is_nan\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_infinite\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#177\">Source</a><a href=\"#method.is_infinite\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.is_infinite\" class=\"fn\">is_infinite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the number is infinite. <a href=\"num_traits/float/trait.FloatCore.html#method.is_infinite\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_finite\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#182\">Source</a><a href=\"#method.is_finite\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.is_finite\" class=\"fn\">is_finite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the number is neither infinite or NaN. <a href=\"num_traits/float/trait.FloatCore.html#method.is_finite\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_normal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#187\">Source</a><a href=\"#method.is_normal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.is_normal\" class=\"fn\">is_normal</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the number is neither zero, infinite, subnormal or NaN. <a href=\"num_traits/float/trait.FloatCore.html#method.is_normal\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.classify\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#192\">Source</a><a href=\"#method.classify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#tymethod.classify\" class=\"fn\">classify</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/num/enum.FpCategory.html\" title=\"enum core::num::FpCategory\">FpCategory</a></h4></section></summary><div class='docblock'>Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead. <a href=\"num_traits/float/trait.FloatCore.html#tymethod.classify\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#197\">Source</a><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.floor\" class=\"fn\">floor</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the largest integer less than or equal to a number. <a href=\"num_traits/float/trait.FloatCore.html#method.floor\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#202\">Source</a><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.ceil\" class=\"fn\">ceil</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the smallest integer greater than or equal to a number. <a href=\"num_traits/float/trait.FloatCore.html#method.ceil\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#207\">Source</a><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.round\" class=\"fn\">round</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the nearest integer to a number. Round half-way cases away from <code>0.0</code>. <a href=\"num_traits/float/trait.FloatCore.html#method.round\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trunc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#212\">Source</a><a href=\"#method.trunc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.trunc\" class=\"fn\">trunc</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Return the integer part of a number. <a href=\"num_traits/float/trait.FloatCore.html#method.trunc\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fract\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#217\">Source</a><a href=\"#method.fract\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.fract\" class=\"fn\">fract</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the fractional part of a number. <a href=\"num_traits/float/trait.FloatCore.html#method.fract\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#222\">Source</a><a href=\"#method.abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.abs\" class=\"fn\">abs</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Computes the absolute value of <code>self</code>. Returns <code>FloatCore::nan()</code> if the\nnumber is <code>FloatCore::nan()</code>. <a href=\"num_traits/float/trait.FloatCore.html#method.abs\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#227\">Source</a><a href=\"#method.signum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.signum\" class=\"fn\">signum</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns a number that represents the sign of <code>self</code>. <a href=\"num_traits/float/trait.FloatCore.html#method.signum\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sign_positive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#232\">Source</a><a href=\"#method.is_sign_positive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.is_sign_positive\" class=\"fn\">is_sign_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and\n<code>FloatCore::infinity()</code>, and <code>FloatCore::nan()</code>. <a href=\"num_traits/float/trait.FloatCore.html#method.is_sign_positive\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sign_negative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#237\">Source</a><a href=\"#method.is_sign_negative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.is_sign_negative\" class=\"fn\">is_sign_negative</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and\n<code>FloatCore::neg_infinity()</code>, and <code>-FloatCore::nan()</code>. <a href=\"num_traits/float/trait.FloatCore.html#method.is_sign_negative\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#241\">Source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the minimum of the two numbers. <a href=\"num_traits/float/trait.FloatCore.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#255\">Source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the maximum of the two numbers. <a href=\"num_traits/float/trait.FloatCore.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#270\">Source</a><a href=\"#method.recip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.recip\" class=\"fn\">recip</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the reciprocal (multiplicative inverse) of the number. <a href=\"num_traits/float/trait.FloatCore.html#method.recip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#275\">Source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.powi\" class=\"fn\">powi</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Raise a number to an integer power. <a href=\"num_traits/float/trait.FloatCore.html#method.powi\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_degrees\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#280\">Source</a><a href=\"#method.to_degrees\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#tymethod.to_degrees\" class=\"fn\">to_degrees</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Converts to degrees, assuming the number is in radians. <a href=\"num_traits/float/trait.FloatCore.html#tymethod.to_degrees\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_radians\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#285\">Source</a><a href=\"#method.to_radians\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#tymethod.to_radians\" class=\"fn\">to_radians</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Converts to radians, assuming the number is in degrees. <a href=\"num_traits/float/trait.FloatCore.html#tymethod.to_radians\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integer_decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#290\">Source</a><a href=\"#method.integer_decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#tymethod.integer_decode\" class=\"fn\">integer_decode</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by <code>sign * mantissa * 2 ^ exponent</code>. <a href=\"num_traits/float/trait.FloatCore.html#tymethod.integer_decode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subnormal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#267\">Source</a><a href=\"#method.is_subnormal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.is_subnormal\" class=\"fn\">is_subnormal</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the number is <a href=\"https://en.wikipedia.org/wiki/Subnormal_number\">subnormal</a>. <a href=\"num_traits/float/trait.FloatCore.html#method.is_subnormal\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#681\">Source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.FloatCore.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self</h4></section></summary><div class='docblock'>A value bounded by a minimum and a maximum <a href=\"num_traits/float/trait.FloatCore.html#method.clamp\">Read more</a></div></details></div></details>","FloatCore","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci8%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#817\">Source</a><a href=\"#impl-From%3Ci8%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#819\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i8>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu8%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#825\">Source</a><a href=\"#impl-From%3Cu8%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#827\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u8>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#764\">Source</a><a href=\"#impl-FromBytes-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#765\">Source</a><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.array.html\">2</a>]</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#767\">Source</a><a href=\"#method.from_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bytes: &amp;&lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Create a number from its representation as a byte array in big endian. <a href=\"num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#771\">Source</a><a href=\"#method.from_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bytes: &amp;&lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Create a number from its representation as a byte array in little endian. <a href=\"num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#775\">Source</a><a href=\"#method.from_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/bytes/trait.FromBytes.html#method.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(bytes: &amp;&lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Create a number from its memory representation as a byte array in native endianness. <a href=\"num_traits/ops/bytes/trait.FromBytes.html#method.from_ne_bytes\">Read more</a></div></details></div></details>","FromBytes","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPrimitive-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#52\">Source</a><a href=\"#impl-FromPrimitive-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.FromPrimitive.html\" title=\"trait num_traits::cast::FromPrimitive\">FromPrimitive</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#54\">Source</a><a href=\"#method.from_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#tymethod.from_i64\" class=\"fn\">from_i64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#58\">Source</a><a href=\"#method.from_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#tymethod.from_u64\" class=\"fn\">from_u64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#62\">Source</a><a href=\"#method.from_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i8\" class=\"fn\">from_i8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#66\">Source</a><a href=\"#method.from_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u8\" class=\"fn\">from_u8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#70\">Source</a><a href=\"#method.from_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i16\" class=\"fn\">from_i16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#74\">Source</a><a href=\"#method.from_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u16\" class=\"fn\">from_u16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#78\">Source</a><a href=\"#method.from_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i32\" class=\"fn\">from_i32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#82\">Source</a><a href=\"#method.from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u32\" class=\"fn\">from_u32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#86\">Source</a><a href=\"#method.from_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f32\" class=\"fn\">from_f32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#90\">Source</a><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f64\" class=\"fn\">from_f64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#391\">Source</a><a href=\"#method.from_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_isize\" class=\"fn\">from_isize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>isize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#426\">Source</a><a href=\"#method.from_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i128\" class=\"fn\">from_i128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>i128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#433\">Source</a><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_usize\" class=\"fn\">from_usize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts a <code>usize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#468\">Source</a><a href=\"#method.from_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u128\" class=\"fn\">from_u128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>u128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u128\">Read more</a></div></details></div></details>","FromPrimitive","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#933\">Source</a><a href=\"#impl-FromStr-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#934\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/num/dec2flt/struct.ParseFloatError.html\" title=\"struct core::num::dec2flt::ParseFloatError\">ParseFloatError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#935\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/num/dec2flt/struct.ParseFloatError.html\" title=\"struct core::num::dec2flt::ParseFloatError\">ParseFloatError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.87.0/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerExp-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#955\">Source</a><a href=\"#impl-LowerExp-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.LowerExp.html\" title=\"trait core::fmt::LowerExp\">LowerExp</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#956\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.LowerExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.LowerExp.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerExp","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#983\">Source</a><a href=\"#impl-LowerHex-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#984\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.LowerHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerHex","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26f16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1123\">Source</a><a href=\"#impl-Mul%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1124\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1127\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&f16>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1114\">Source</a><a href=\"#impl-Mul-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1115\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1118\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26f16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1157\">Source</a><a href=\"#impl-MulAssign%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1159\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&f16>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1150\">Source</a><a href=\"#impl-MulAssign-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1152\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#996\">Source</a><a href=\"#impl-Neg-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#997\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1000\">Source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Num-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#95\">Source</a><a href=\"#impl-Num-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.FromStrRadixErr\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#96\">Source</a><a href=\"#associatedtype.FromStrRadixErr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/trait.Num.html#associatedtype.FromStrRadixErr\" class=\"associatedtype\">FromStrRadixErr</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/trait.Num.html#associatedtype.FromStrRadixErr\" title=\"type num_traits::Num::FromStrRadixErr\">FromStrRadixErr</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#99\">Source</a><a href=\"#method.from_str_radix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/trait.Num.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(\n    str: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.str.html\">str</a>,\n    radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>, &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/trait.Num.html#associatedtype.FromStrRadixErr\" title=\"type num_traits::Num::FromStrRadixErr\">FromStrRadixErr</a>&gt;</h4></section></summary><div class='docblock'>Convert from a string and radix (typically <code>2..=36</code>). <a href=\"num_traits/trait.Num.html#tymethod.from_str_radix\">Read more</a></div></details></div></details>","Num","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumCast-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#123\">Source</a><a href=\"#impl-NumCast-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#125\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.NumCast.html#tymethod.from\" class=\"fn\">from</a>&lt;T&gt;(n: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a>,</div></h4></section></summary><div class='docblock'>Creates a number from another value that can be converted into\na primitive via the <code>ToPrimitive</code> trait. If the source value cannot be\nrepresented by the target type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.NumCast.html#tymethod.from\">Read more</a></div></details></div></details>","NumCast","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#976\">Source</a><a href=\"#impl-Octal-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#977\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Octal.html#tymethod.fmt\">Read more</a></div></details></div></details>","Octal","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#104\">Source</a><a href=\"#impl-One-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#106\">Source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the multiplicative identity element of <code>Self</code>, <code>1</code>. <a href=\"num_traits/identities/trait.One.html#tymethod.one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#118\">Source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#128-130\">Source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"num_traits/identities/trait.One.html#method.is_one\">Read more</a></div></details></div></details>","One","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#833\">Source</a><a href=\"#impl-PartialEq-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#834\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#843\">Source</a><a href=\"#impl-PartialOrd-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#844\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#871\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#886\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#901\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#916\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product%3C%26f16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1271\">Source</a><a href=\"#impl-Product%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;&amp;'a <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1273\">Source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by multiplying\nthe items.</div></details></div></details>","Product<&'a f16>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1264\">Source</a><a href=\"#impl-Product-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1266\">Source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by multiplying\nthe items.</div></details></div></details>","Product","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26f16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1223\">Source</a><a href=\"#impl-Rem%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1224\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1227\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: &amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&f16>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1214\">Source</a><a href=\"#impl-Rem-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1215\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1218\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3C%26f16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1257\">Source</a><a href=\"#impl-RemAssign%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;&amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1259\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<&f16>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1250\">Source</a><a href=\"#impl-RemAssign-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1252\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SampleUniform-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/rand_distr.rs.html#31\">Source</a><a href=\"#impl-SampleUniform-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rand/distr/uniform/trait.SampleUniform.html\" title=\"trait rand::distr::uniform::SampleUniform\">SampleUniform</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Sampler\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/half/rand_distr.rs.html#32\">Source</a><a href=\"#associatedtype.Sampler\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rand/distr/uniform/trait.SampleUniform.html#associatedtype.Sampler\" class=\"associatedtype\">Sampler</a> = Float16Sampler</h4></section></summary><div class='docblock'>The <code>UniformSampler</code> implementation supporting type <code>X</code>.</div></details></div></details>","SampleUniform","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26f16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1073\">Source</a><a href=\"#impl-Sub%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1074\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1077\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: &amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&f16>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1064\">Source</a><a href=\"#impl-Sub-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1065\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1068\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26f16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1107\">Source</a><a href=\"#impl-SubAssign%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1109\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&f16>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1100\">Source</a><a href=\"#impl-SubAssign-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1102\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26f16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1285\">Source</a><a href=\"#impl-Sum%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt; for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1287\">Source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum<&'a f16>","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1278\">Source</a><a href=\"#impl-Sum-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#1280\">Source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToBytes-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#748\">Source</a><a href=\"#impl-ToBytes-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#749\">Source</a><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.array.html\">2</a>]</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#751\">Source</a><a href=\"#method.to_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(&amp;self) -&gt; &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in big-endian byte order. <a href=\"num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#755\">Source</a><a href=\"#method.to_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(&amp;self) -&gt; &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in little-endian byte order. <a href=\"num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#759\">Source</a><a href=\"#method.to_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/bytes/trait.ToBytes.html#method.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(&amp;self) -&gt; &lt;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a> as <a class=\"trait\" href=\"num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in native byte order. <a href=\"num_traits/ops/bytes/trait.ToBytes.html#method.to_ne_bytes\">Read more</a></div></details></div></details>","ToBytes","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPrimitive-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#9\">Source</a><a href=\"#impl-ToPrimitive-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#11\">Source</a><a href=\"#method.to_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot be\nrepresented by an <code>i64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#15\">Source</a><a href=\"#method.to_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be\nrepresented by a <code>u64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#19\">Source</a><a href=\"#method.to_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i8\" class=\"fn\">to_i8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be\nrepresented by an <code>i8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#23\">Source</a><a href=\"#method.to_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u8\" class=\"fn\">to_u8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be\nrepresented by a <code>u8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#27\">Source</a><a href=\"#method.to_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i16\" class=\"fn\">to_i16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot be\nrepresented by an <code>i16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#31\">Source</a><a href=\"#method.to_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u16\" class=\"fn\">to_u16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be\nrepresented by a <code>u16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#35\">Source</a><a href=\"#method.to_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i32\" class=\"fn\">to_i32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot be\nrepresented by an <code>i32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#39\">Source</a><a href=\"#method.to_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u32\" class=\"fn\">to_u32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be\nrepresented by a <code>u32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#43\">Source</a><a href=\"#method.to_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f32\" class=\"fn\">to_f32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#47\">Source</a><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f64\" class=\"fn\">to_f64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f64</code>. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#21\">Source</a><a href=\"#method.to_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_isize\" class=\"fn\">to_isize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>isize</code>. If the value cannot be\nrepresented by an <code>isize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#57\">Source</a><a href=\"#method.to_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i128\" class=\"fn\">to_i128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot be\nrepresented by an <code>i128</code> (<code>i64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#64\">Source</a><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_usize\" class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot be\nrepresented by a <code>usize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#100\">Source</a><a href=\"#method.to_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u128\" class=\"fn\">to_u128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot be\nrepresented by a <code>u128</code> (<code>u64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u128\">Read more</a></div></details></div></details>","ToPrimitive","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperExp-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#962\">Source</a><a href=\"#impl-UpperExp-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.UpperExp.html\" title=\"trait core::fmt::UpperExp\">UpperExp</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#963\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.UpperExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.UpperExp.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperExp","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#990\">Source</a><a href=\"#impl-UpperHex-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#991\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.UpperHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperHex","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#111\">Source</a><a href=\"#impl-Zero-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#113\">Source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"num_traits/identities/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/half/num_traits.rs.html#118\">Source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#23\">Source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#43\">Source</a><a href=\"#impl-Zeroable-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/zeroable/trait.Zeroable.html\" title=\"trait bytemuck::zeroable::Zeroable\">Zeroable</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/zeroable.rs.html#32\">Source</a><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/zeroable/trait.Zeroable.html#method.zeroed\" class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.87.0/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a href=\"bytemuck/zeroable/trait.Zeroable.html#method.zeroed\">Read more</a></div></details></div></details>","Zeroable","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#52\">Source</a><a href=\"#impl-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.DIGITS\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#720\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.DIGITS\" class=\"constant\">DIGITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u32.html\">u32</a> = 3u32</h4></section></summary><div class=\"docblock\"><p>Approximate number of <a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> significant digits in base 10</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.EPSILON\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#725\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.EPSILON\" class=\"constant\">EPSILON</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a>\n<a href=\"https://en.wikipedia.org/wiki/Machine_epsilon\">machine epsilon</a> value</p>\n<p>This is the difference between 1.0 and the next largest representable number.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.INFINITY\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#727\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.INFINITY\" class=\"constant\">INFINITY</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> positive Infinity (+∞)</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MANTISSA_DIGITS\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#729\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.MANTISSA_DIGITS\" class=\"constant\">MANTISSA_DIGITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u32.html\">u32</a> = 11u32</h4></section></summary><div class=\"docblock\"><p>Number of <a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> significant digits in base 2</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#731\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Largest finite <a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> value</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_10_EXP\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#733\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.MAX_10_EXP\" class=\"constant\">MAX_10_EXP</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i32.html\">i32</a> = 4i32</h4></section></summary><div class=\"docblock\"><p>Maximum possible <a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> power of 10 exponent</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_EXP\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#735\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.MAX_EXP\" class=\"constant\">MAX_EXP</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i32.html\">i32</a> = 16i32</h4></section></summary><div class=\"docblock\"><p>Maximum possible <a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> power of 2 exponent</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#737\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Smallest finite <a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> value</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_10_EXP\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#739\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.MIN_10_EXP\" class=\"constant\">MIN_10_EXP</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i32.html\">i32</a> = -4i32</h4></section></summary><div class=\"docblock\"><p>Minimum possible normal <a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> power of 10 exponent</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_EXP\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#741\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.MIN_EXP\" class=\"constant\">MIN_EXP</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i32.html\">i32</a> = -13i32</h4></section></summary><div class=\"docblock\"><p>One greater than the minimum possible normal <a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> power of 2 exponent</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_POSITIVE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#743\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.MIN_POSITIVE\" class=\"constant\">MIN_POSITIVE</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Smallest positive normal <a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> value</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.NAN\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#745\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.NAN\" class=\"constant\">NAN</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> Not a Number (NaN)</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.NEG_INFINITY\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#747\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.NEG_INFINITY\" class=\"constant\">NEG_INFINITY</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> negative infinity (-∞)</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.RADIX\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#749\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.RADIX\" class=\"constant\">RADIX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u32.html\">u32</a> = 2u32</h4></section></summary><div class=\"docblock\"><p>The radix or base of the internal representation of <a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a></p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_POSITIVE_SUBNORMAL\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#752\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.MIN_POSITIVE_SUBNORMAL\" class=\"constant\">MIN_POSITIVE_SUBNORMAL</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Minimum positive subnormal <a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> value</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_SUBNORMAL\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#754\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.MAX_SUBNORMAL\" class=\"constant\">MAX_SUBNORMAL</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Maximum subnormal <a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> value</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ONE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#757\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.ONE\" class=\"constant\">ONE</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> 1</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#759\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> 0</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.NEG_ZERO\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#761\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.NEG_ZERO\" class=\"constant\">NEG_ZERO</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> -0</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.NEG_ONE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#763\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.NEG_ONE\" class=\"constant\">NEG_ONE</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> -1</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.E\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#766\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.E\" class=\"constant\">E</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> Euler’s number (ℯ)</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.PI\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#768\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.PI\" class=\"constant\">PI</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> Archimedes’ constant (π)</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_1_PI\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#770\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.FRAC_1_PI\" class=\"constant\">FRAC_1_PI</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> 1/π</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_1_SQRT_2\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#772\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.FRAC_1_SQRT_2\" class=\"constant\">FRAC_1_SQRT_2</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> 1/√2</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_2_PI\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#774\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.FRAC_2_PI\" class=\"constant\">FRAC_2_PI</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> 2/π</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_2_SQRT_PI\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#776\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.FRAC_2_SQRT_PI\" class=\"constant\">FRAC_2_SQRT_PI</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> 2/√π</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_PI_2\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#778\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.FRAC_PI_2\" class=\"constant\">FRAC_PI_2</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> π/2</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_PI_3\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#780\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.FRAC_PI_3\" class=\"constant\">FRAC_PI_3</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> π/3</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_PI_4\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#782\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.FRAC_PI_4\" class=\"constant\">FRAC_PI_4</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> π/4</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_PI_6\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#784\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.FRAC_PI_6\" class=\"constant\">FRAC_PI_6</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> π/6</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FRAC_PI_8\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#786\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.FRAC_PI_8\" class=\"constant\">FRAC_PI_8</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> π/8</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.LN_10\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#788\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.LN_10\" class=\"constant\">LN_10</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> 𝗅𝗇 10</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.LN_2\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#790\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.LN_2\" class=\"constant\">LN_2</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> 𝗅𝗇 2</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.LOG10_E\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#792\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.LOG10_E\" class=\"constant\">LOG10_E</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> 𝗅𝗈𝗀₁₀ℯ</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.LOG10_2\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#794\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.LOG10_2\" class=\"constant\">LOG10_2</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> 𝗅𝗈𝗀₁₀2</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.LOG2_E\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#796\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.LOG2_E\" class=\"constant\">LOG2_E</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> 𝗅𝗈𝗀₂ℯ</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.LOG2_10\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#798\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.LOG2_10\" class=\"constant\">LOG2_10</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> 𝗅𝗈𝗀₂10</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.SQRT_2\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#800\">Source</a><h4 class=\"code-header\">pub const <a href=\"gemm_f16/struct.f16.html#associatedconstant.SQRT_2\" class=\"constant\">SQRT_2</a>: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p><a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> √2</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#56\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.from_bits\" class=\"fn\">from_bits</a>(bits: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Constructs a 16-bit floating point value from the raw bits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f32\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#69\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gemm_f16/struct.f16.html#tymethod.from_f32\" class=\"fn\">from_f32</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Constructs a 16-bit floating point value from a 32-bit floating point value.</p>\n<p>This operation is lossy. If the 32-bit value is to large to fit in 16-bits, ±∞ will result.\nNaN values are preserved. 32-bit subnormal values are too tiny to be represented in 16-bits\nand result in ±0. Exponents that underflow the minimum 16-bit exponent will result in 16-bit\nsubnormals or ±0. All other values are truncated and rounded to the nearest representable\n16-bit value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f32_const\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#86\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.from_f32_const\" class=\"fn\">from_f32_const</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Constructs a 16-bit floating point value from a 32-bit floating point value.</p>\n<p>This function is identical to <a href=\"gemm_f16/struct.f16.html#method.from_f32\" title=\"associated function gemm_f16::f16::from_f32\"><code>from_f32</code></a> except it never uses hardware\nintrinsics, which allows it to be <code>const</code>. <a href=\"gemm_f16/struct.f16.html#method.from_f32\" title=\"associated function gemm_f16::f16::from_f32\"><code>from_f32</code></a> should be preferred\nin any non-<code>const</code> context.</p>\n<p>This operation is lossy. If the 32-bit value is to large to fit in 16-bits, ±∞ will result.\nNaN values are preserved. 32-bit subnormal values are too tiny to be represented in 16-bits\nand result in ±0. Exponents that underflow the minimum 16-bit exponent will result in 16-bit\nsubnormals or ±0. All other values are truncated and rounded to the nearest representable\n16-bit value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#99\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gemm_f16/struct.f16.html#tymethod.from_f64\" class=\"fn\">from_f64</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Constructs a 16-bit floating point value from a 64-bit floating point value.</p>\n<p>This operation is lossy. If the 64-bit value is to large to fit in 16-bits, ±∞ will result.\nNaN values are preserved. 64-bit subnormal values are too tiny to be represented in 16-bits\nand result in ±0. Exponents that underflow the minimum 16-bit exponent will result in 16-bit\nsubnormals or ±0. All other values are truncated and rounded to the nearest representable\n16-bit value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64_const\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#116\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.from_f64_const\" class=\"fn\">from_f64_const</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Constructs a 16-bit floating point value from a 64-bit floating point value.</p>\n<p>This function is identical to <a href=\"gemm_f16/struct.f16.html#method.from_f64\" title=\"associated function gemm_f16::f16::from_f64\"><code>from_f64</code></a> except it never uses hardware\nintrinsics, which allows it to be <code>const</code>. <a href=\"gemm_f16/struct.f16.html#method.from_f64\" title=\"associated function gemm_f16::f16::from_f64\"><code>from_f64</code></a> should be preferred\nin any non-<code>const</code> context.</p>\n<p>This operation is lossy. If the 64-bit value is to large to fit in 16-bits, ±∞ will result.\nNaN values are preserved. 64-bit subnormal values are too tiny to be represented in 16-bits\nand result in ±0. Exponents that underflow the minimum 16-bit exponent will result in 16-bit\nsubnormals or ±0. All other values are truncated and rounded to the nearest representable\n16-bit value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bits\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#123\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.to_bits\" class=\"fn\">to_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> into the underlying bit representation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#139\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.array.html\">2</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the memory representation of the underlying bit representation as a byte array in\nlittle-endian byte order.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = f16::from_f32(<span class=\"number\">12.5</span>).to_le_bytes();\n<span class=\"macro\">assert_eq!</span>(bytes, [<span class=\"number\">0x40</span>, <span class=\"number\">0x4A</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#155\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.array.html\">2</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the memory representation of the underlying bit representation as a byte array in\nbig-endian (network) byte order.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = f16::from_f32(<span class=\"number\">12.5</span>).to_be_bytes();\n<span class=\"macro\">assert_eq!</span>(bytes, [<span class=\"number\">0x4A</span>, <span class=\"number\">0x40</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#179\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.array.html\">2</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the memory representation of the underlying bit representation as a byte array in\nnative byte order.</p>\n<p>As the target platform’s native endianness is used, portable code should use\n<a href=\"gemm_f16/struct.f16.html#method.to_be_bytes\" title=\"method gemm_f16::f16::to_be_bytes\"><code>to_be_bytes</code></a> or <a href=\"gemm_f16/struct.f16.html#method.to_le_bytes\" title=\"method gemm_f16::f16::to_le_bytes\"><code>to_le_bytes</code></a>, as appropriate,\ninstead.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = f16::from_f32(<span class=\"number\">12.5</span>).to_ne_bytes();\n<span class=\"macro\">assert_eq!</span>(bytes, <span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    [<span class=\"number\">0x4A</span>, <span class=\"number\">0x40</span>]\n} <span class=\"kw\">else </span>{\n    [<span class=\"number\">0x40</span>, <span class=\"number\">0x4A</span>]\n});</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#194\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.array.html\">2</a>]) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Creates a floating point value from its representation as a byte array in little endian.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = f16::from_le_bytes([<span class=\"number\">0x40</span>, <span class=\"number\">0x4A</span>]);\n<span class=\"macro\">assert_eq!</span>(value, f16::from_f32(<span class=\"number\">12.5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#209\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.array.html\">2</a>]) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Creates a floating point value from its representation as a byte array in big endian.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = f16::from_be_bytes([<span class=\"number\">0x4A</span>, <span class=\"number\">0x40</span>]);\n<span class=\"macro\">assert_eq!</span>(value, f16::from_f32(<span class=\"number\">12.5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#232\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.array.html\">2</a>]) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Creates a floating point value from its representation as a byte array in native endian.</p>\n<p>As the target platform’s native endianness is used, portable code likely wants to use\n<a href=\"gemm_f16/struct.f16.html#method.from_be_bytes\" title=\"associated function gemm_f16::f16::from_be_bytes\"><code>from_be_bytes</code></a> or <a href=\"gemm_f16/struct.f16.html#method.from_le_bytes\" title=\"associated function gemm_f16::f16::from_le_bytes\"><code>from_le_bytes</code></a>, as\nappropriate instead.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = f16::from_ne_bytes(<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    [<span class=\"number\">0x4A</span>, <span class=\"number\">0x40</span>]\n} <span class=\"kw\">else </span>{\n    [<span class=\"number\">0x40</span>, <span class=\"number\">0x4A</span>]\n});\n<span class=\"macro\">assert_eq!</span>(value, f16::from_f32(<span class=\"number\">12.5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#242\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gemm_f16/struct.f16.html#tymethod.to_f32\" class=\"fn\">to_f32</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> value into a <code>f32</code> value.</p>\n<p>This conversion is lossless as all 16-bit floating point values can be represented exactly\nin 32-bit floating point.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32_const\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#256\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.to_f32_const\" class=\"fn\">to_f32_const</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> value into a <code>f32</code> value.</p>\n<p>This function is identical to <a href=\"gemm_f16/struct.f16.html#method.to_f32\" title=\"method gemm_f16::f16::to_f32\"><code>to_f32</code></a> except it never uses hardware\nintrinsics, which allows it to be <code>const</code>. <a href=\"gemm_f16/struct.f16.html#method.to_f32\" title=\"method gemm_f16::f16::to_f32\"><code>to_f32</code></a> should be preferred\nin any non-<code>const</code> context.</p>\n<p>This conversion is lossless as all 16-bit floating point values can be represented exactly\nin 32-bit floating point.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#266\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gemm_f16/struct.f16.html#tymethod.to_f64\" class=\"fn\">to_f64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> value into a <code>f64</code> value.</p>\n<p>This conversion is lossless as all 16-bit floating point values can be represented exactly\nin 64-bit floating point.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64_const\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#280\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.to_f64_const\" class=\"fn\">to_f64_const</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\"><code>f16</code></a> value into a <code>f64</code> value.</p>\n<p>This function is identical to <a href=\"gemm_f16/struct.f16.html#method.to_f64\" title=\"method gemm_f16::f16::to_f64\"><code>to_f64</code></a> except it never uses hardware\nintrinsics, which allows it to be <code>const</code>. <a href=\"gemm_f16/struct.f16.html#method.to_f64\" title=\"method gemm_f16::f16::to_f64\"><code>to_f64</code></a> should be preferred\nin any non-<code>const</code> context.</p>\n<p>This conversion is lossless as all 16-bit floating point values can be represented exactly\nin 64-bit floating point.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_nan\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#299\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.is_nan\" class=\"fn\">is_nan</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if this value is <code>NaN</code> and <code>false</code> otherwise.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>nan = f16::NAN;\n<span class=\"kw\">let </span>f = f16::from_f32(<span class=\"number\">7.0_f32</span>);\n\n<span class=\"macro\">assert!</span>(nan.is_nan());\n<span class=\"macro\">assert!</span>(!f.is_nan());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_infinite\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#324\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.is_infinite\" class=\"fn\">is_infinite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if this value is ±∞ and <code>false</code>.\notherwise.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>f = f16::from_f32(<span class=\"number\">7.0f32</span>);\n<span class=\"kw\">let </span>inf = f16::INFINITY;\n<span class=\"kw\">let </span>neg_inf = f16::NEG_INFINITY;\n<span class=\"kw\">let </span>nan = f16::NAN;\n\n<span class=\"macro\">assert!</span>(!f.is_infinite());\n<span class=\"macro\">assert!</span>(!nan.is_infinite());\n\n<span class=\"macro\">assert!</span>(inf.is_infinite());\n<span class=\"macro\">assert!</span>(neg_inf.is_infinite());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_finite\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#348\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.is_finite\" class=\"fn\">is_finite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>f = f16::from_f32(<span class=\"number\">7.0f32</span>);\n<span class=\"kw\">let </span>inf = f16::INFINITY;\n<span class=\"kw\">let </span>neg_inf = f16::NEG_INFINITY;\n<span class=\"kw\">let </span>nan = f16::NAN;\n\n<span class=\"macro\">assert!</span>(f.is_finite());\n\n<span class=\"macro\">assert!</span>(!nan.is_finite());\n<span class=\"macro\">assert!</span>(!inf.is_finite());\n<span class=\"macro\">assert!</span>(!neg_inf.is_finite());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_normal\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#375\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.is_normal\" class=\"fn\">is_normal</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is neither zero, infinite, subnormal, or <code>NaN</code>.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>min = f16::MIN_POSITIVE;\n<span class=\"kw\">let </span>max = f16::MAX;\n<span class=\"kw\">let </span>lower_than_min = f16::from_f32(<span class=\"number\">1.0e-10_f32</span>);\n<span class=\"kw\">let </span>zero = f16::from_f32(<span class=\"number\">0.0_f32</span>);\n\n<span class=\"macro\">assert!</span>(min.is_normal());\n<span class=\"macro\">assert!</span>(max.is_normal());\n\n<span class=\"macro\">assert!</span>(!zero.is_normal());\n<span class=\"macro\">assert!</span>(!f16::NAN.is_normal());\n<span class=\"macro\">assert!</span>(!f16::INFINITY.is_normal());\n<span class=\"comment\">// Values between `0` and `min` are Subnormal.\n</span><span class=\"macro\">assert!</span>(!lower_than_min.is_normal());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.classify\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#398\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.classify\" class=\"fn\">classify</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/num/enum.FpCategory.html\" title=\"enum core::num::FpCategory\">FpCategory</a></h4></section></summary><div class=\"docblock\"><p>Returns the floating point category of the number.</p>\n<p>If only one property is going to be tested, it is generally faster to use the specific\npredicate instead.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::num::FpCategory;\n\n<span class=\"kw\">let </span>num = f16::from_f32(<span class=\"number\">12.4_f32</span>);\n<span class=\"kw\">let </span>inf = f16::INFINITY;\n\n<span class=\"macro\">assert_eq!</span>(num.classify(), FpCategory::Normal);\n<span class=\"macro\">assert_eq!</span>(inf.classify(), FpCategory::Infinite);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signum\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.signum\" class=\"fn\">signum</a>(self) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Returns a number that represents the sign of <code>self</code>.</p>\n<ul>\n<li><code>1.0</code> if the number is positive, <code>+0.0</code> or <a href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f16.html#associatedconstant.INFINITY\" title=\"associated constant f16::INFINITY\"><code>INFINITY</code></a></li>\n<li><code>-1.0</code> if the number is negative, <code>-0.0</code> or <a href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f16.html#associatedconstant.NEG_INFINITY\" title=\"associated constant f16::NEG_INFINITY\"><code>NEG_INFINITY</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/1.87.0/std/primitive.f16.html#associatedconstant.NAN\" title=\"associated constant f16::NAN\"><code>NAN</code></a> if the number is <code>NaN</code></li>\n</ul>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>f = f16::from_f32(<span class=\"number\">3.5_f32</span>);\n\n<span class=\"macro\">assert_eq!</span>(f.signum(), f16::from_f32(<span class=\"number\">1.0</span>));\n<span class=\"macro\">assert_eq!</span>(f16::NEG_INFINITY.signum(), f16::from_f32(-<span class=\"number\">1.0</span>));\n\n<span class=\"macro\">assert!</span>(f16::NAN.signum().is_nan());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sign_positive\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#458\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.is_sign_positive\" class=\"fn\">is_sign_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if and only if <code>self</code> has a positive sign, including <code>+0.0</code>, <code>NaNs</code> with a\npositive sign bit and +∞.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>nan = f16::NAN;\n<span class=\"kw\">let </span>f = f16::from_f32(<span class=\"number\">7.0_f32</span>);\n<span class=\"kw\">let </span>g = f16::from_f32(-<span class=\"number\">7.0_f32</span>);\n\n<span class=\"macro\">assert!</span>(f.is_sign_positive());\n<span class=\"macro\">assert!</span>(!g.is_sign_positive());\n<span class=\"comment\">// `NaN` can be either positive or negative\n</span><span class=\"macro\">assert!</span>(nan.is_sign_positive() != nan.is_sign_negative());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sign_negative\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#481\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.is_sign_negative\" class=\"fn\">is_sign_negative</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if and only if <code>self</code> has a negative sign, including <code>-0.0</code>, <code>NaNs</code> with a\nnegative sign bit and −∞.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>nan = f16::NAN;\n<span class=\"kw\">let </span>f = f16::from_f32(<span class=\"number\">7.0f32</span>);\n<span class=\"kw\">let </span>g = f16::from_f32(-<span class=\"number\">7.0f32</span>);\n\n<span class=\"macro\">assert!</span>(!f.is_sign_negative());\n<span class=\"macro\">assert!</span>(g.is_sign_negative());\n<span class=\"comment\">// `NaN` can be either positive or negative\n</span><span class=\"macro\">assert!</span>(nan.is_sign_positive() != nan.is_sign_negative());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copysign\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#505\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"gemm_f16/struct.f16.html#tymethod.copysign\" class=\"fn\">copysign</a>(self, sign: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Returns a number composed of the magnitude of <code>self</code> and the sign of <code>sign</code>.</p>\n<p>Equal to <code>self</code> if the sign of <code>self</code> and <code>sign</code> are the same, otherwise equal to <code>-self</code>.\nIf <code>self</code> is NaN, then NaN with the sign of <code>sign</code> is returned.</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>f = f16::from_f32(<span class=\"number\">3.5</span>);\n\n<span class=\"macro\">assert_eq!</span>(f.copysign(f16::from_f32(<span class=\"number\">0.42</span>)), f16::from_f32(<span class=\"number\">3.5</span>));\n<span class=\"macro\">assert_eq!</span>(f.copysign(f16::from_f32(-<span class=\"number\">0.42</span>)), f16::from_f32(-<span class=\"number\">3.5</span>));\n<span class=\"macro\">assert_eq!</span>((-f).copysign(f16::from_f32(<span class=\"number\">0.42</span>)), f16::from_f32(<span class=\"number\">3.5</span>));\n<span class=\"macro\">assert_eq!</span>((-f).copysign(f16::from_f32(-<span class=\"number\">0.42</span>)), f16::from_f32(-<span class=\"number\">3.5</span>));\n\n<span class=\"macro\">assert!</span>(f16::NAN.copysign(f16::from_f32(<span class=\"number\">1.0</span>)).is_nan());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#524\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gemm_f16/struct.f16.html#tymethod.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Returns the maximum of the two numbers.</p>\n<p>If one of the arguments is NaN, then the other argument is returned.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = f16::from_f32(<span class=\"number\">1.0</span>);\n<span class=\"kw\">let </span>y = f16::from_f32(<span class=\"number\">2.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(x.max(y), y);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#547\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gemm_f16/struct.f16.html#tymethod.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Returns the minimum of the two numbers.</p>\n<p>If one of the arguments is NaN, then the other argument is returned.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = f16::from_f32(<span class=\"number\">1.0</span>);\n<span class=\"kw\">let </span>y = f16::from_f32(<span class=\"number\">2.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(x.min(y), x);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#576\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gemm_f16/struct.f16.html#tymethod.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>, max: <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h4></section></summary><div class=\"docblock\"><p>Restrict a value to a certain interval unless it is NaN.</p>\n<p>Returns <code>max</code> if <code>self</code> is greater than <code>max</code>, and <code>min</code> if <code>self</code> is less than <code>min</code>.\nOtherwise this returns <code>self</code>.</p>\n<p>Note that this function returns NaN if the initial value was NaN as well.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if <code>min &gt; max</code>, <code>min</code> is NaN, or <code>max</code> is NaN.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(f16::from_f32(-<span class=\"number\">3.0</span>).clamp(f16::from_f32(-<span class=\"number\">2.0</span>), f16::from_f32(<span class=\"number\">1.0</span>)) == f16::from_f32(-<span class=\"number\">2.0</span>));\n<span class=\"macro\">assert!</span>(f16::from_f32(<span class=\"number\">0.0</span>).clamp(f16::from_f32(-<span class=\"number\">2.0</span>), f16::from_f32(<span class=\"number\">1.0</span>)) == f16::from_f32(<span class=\"number\">0.0</span>));\n<span class=\"macro\">assert!</span>(f16::from_f32(<span class=\"number\">2.0</span>).clamp(f16::from_f32(-<span class=\"number\">2.0</span>), f16::from_f32(<span class=\"number\">1.0</span>)) == f16::from_f32(<span class=\"number\">1.0</span>));\n<span class=\"macro\">assert!</span>(f16::NAN.clamp(f16::from_f32(-<span class=\"number\">2.0</span>), f16::from_f32(<span class=\"number\">1.0</span>)).is_nan());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.total_cmp\" class=\"method\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#656\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gemm_f16/struct.f16.html#tymethod.total_cmp\" class=\"fn\">total_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class=\"docblock\"><p>Returns the ordering between <code>self</code> and <code>other</code>.</p>\n<p>Unlike the standard partial comparison between floating point numbers,\nthis comparison always produces an ordering in accordance to\nthe <code>totalOrder</code> predicate as defined in the IEEE 754 (2008 revision)\nfloating point standard. The values are ordered in the following sequence:</p>\n<ul>\n<li>negative quiet NaN</li>\n<li>negative signaling NaN</li>\n<li>negative infinity</li>\n<li>negative numbers</li>\n<li>negative subnormal numbers</li>\n<li>negative zero</li>\n<li>positive zero</li>\n<li>positive subnormal numbers</li>\n<li>positive numbers</li>\n<li>positive infinity</li>\n<li>positive signaling NaN</li>\n<li>positive quiet NaN.</li>\n</ul>\n<p>The ordering established by this function does not always agree with the\n<a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\"><code>PartialOrd</code></a> and <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\"><code>PartialEq</code></a> implementations of <code>f16</code>. For example,\nthey consider negative and positive zero equal, while <code>total_cmp</code>\ndoesn’t.</p>\n<p>The interpretation of the signaling NaN bit follows the definition in\nthe IEEE 754 standard, which may not match the interpretation by some of\nthe older, non-conformant (e.g. MIPS) hardware implementations.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v: Vec&lt;f16&gt; = <span class=\"macro\">vec!</span>[];\nv.push(f16::ONE);\nv.push(f16::INFINITY);\nv.push(f16::NEG_INFINITY);\nv.push(f16::NAN);\nv.push(f16::MAX_SUBNORMAL);\nv.push(-f16::MAX_SUBNORMAL);\nv.push(f16::ZERO);\nv.push(f16::NEG_ZERO);\nv.push(f16::NEG_ONE);\nv.push(f16::MIN_POSITIVE);\n\nv.sort_by(|a, b| a.total_cmp(<span class=\"kw-2\">&amp;</span>b));\n\n<span class=\"macro\">assert!</span>(v\n    .into_iter()\n    .zip(\n        [\n            f16::NEG_INFINITY,\n            f16::NEG_ONE,\n            -f16::MAX_SUBNORMAL,\n            f16::NEG_ZERO,\n            f16::ZERO,\n            f16::MAX_SUBNORMAL,\n            f16::MIN_POSITIVE,\n            f16::ONE,\n            f16::INFINITY,\n            f16::NAN\n        ]\n        .iter()\n    )\n    .all(|(a, b)| a.to_bits() == b.to_bits()));</code></pre></div>\n</div></details></div></details>",0,"gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<section id=\"impl-Copy-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#35\">Source</a><a href=\"#impl-Copy-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section>","Copy","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"],["<section id=\"impl-Pod-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"src/half/binary16.rs.html#43\">Source</a><a href=\"#impl-Pod-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/pod/trait.Pod.html\" title=\"trait bytemuck::pod::Pod\">Pod</a> for <a class=\"struct\" href=\"gemm_f16/struct.f16.html\" title=\"struct gemm_f16::f16\">f16</a></h3></section>","Pod","gemm_f16::microkernel::v128_common::f16::T","gemm_f16::microkernel::amx::f16::T"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[292309]}